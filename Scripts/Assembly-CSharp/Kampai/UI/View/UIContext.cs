using Kampai.Common;
using Kampai.Game;
using Kampai.Game.View;
using Kampai.Main;
using Kampai.UI.Controller;
using Kampai.UI.View.UpSell;
using Kampai.Util;
using Kampai.Util.AnimatorStateInfo;
using UnityEngine;
using strange.extensions.context.api;
using strange.extensions.context.impl;

namespace Kampai.UI.View
{
	public class UIContext : BaseContext
	{
		public UIContext()
		{
		}

		public UIContext(MonoBehaviour view, bool autoStartup)
			: base(view, autoStartup)
		{
		}

		protected override void MapBindings()
		{
			injectionBinder.Bind<ICrossContextCapable>().ToValue(this).ToName(UIElement.CONTEXT)
				.CrossContext();
			if (Context.firstContext == this)
			{
				injectionBinder.Bind<AppStartCompleteSignal>().ToSingleton().CrossContext();
			}
			GameObject gameObject = GameObject.Find("UI Root/UI Camera");
			injectionBinder.Bind<Camera>().ToValue(gameObject.GetComponent<Camera>()).ToName(UIElement.CAMERA)
				.CrossContext();
			injectionBinder.Bind<RushDialogPurchaseHelper>().To<RushDialogPurchaseHelper>();
			injectionBinder.Bind<SpawnDooberModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<QuestUIModel>().ToSingleton();
			injectionBinder.Bind<CraftingModalParams>().ToSingleton();
			injectionBinder.Bind<IGUIService>().To<GUIService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<GUIServiceQueueEmptySignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AddStoreButtonSignal>().ToSingleton();
			injectionBinder.Bind<OnTabClickedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<HighlightTabSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<BuildMenuDefinitionLoadedSignal>().ToSingleton();
			injectionBinder.Bind<BuildMenuButtonClickedSignal>().ToSingleton();
			injectionBinder.Bind<AddStoreTabSignal>().ToSingleton();
			injectionBinder.Bind<ToggleStoreTabSignal>().ToSingleton();
			injectionBinder.Bind<MoveTabMenuSignal>().ToSingleton();
			injectionBinder.Bind<MoveHUDSignal>().ToSingleton();
			injectionBinder.Bind<CloseHUDSignal>().ToSingleton();
			injectionBinder.Bind<EnableVillainLairHudSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowMoveBuildingMenuSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowSettingsButtonSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowPetsButtonSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PeekHUDSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PeekStoreSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowHUDReminderSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<HideDelayHUDSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<HideDelayStoreSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SetHUDButtonsVisibleSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<TogglePopupForHUDSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<XPFTUEHighlightSignal>().ToSingleton();
			injectionBinder.Bind<UsageSharingAcceptedSignal>().ToSingleton();
			injectionBinder.Bind<BuildMenuOpenedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUEProgressSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUEQuestPanelCloseSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUEQuestGoToSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUEQuestFinished>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUERewardClosed>().ToSingleton().CrossContext();
			injectionBinder.Bind<FTUETikiOpened>().ToSingleton().CrossContext();
			injectionBinder.Bind<TrainingClosedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SetBadgeForStoreTabSignal>().ToSingleton();
			injectionBinder.Bind<HighlightStoreItemSignal>().ToSingleton();
			injectionBinder.Bind<HideStoreHighlightSignal>().ToSingleton();
			injectionBinder.Bind<SetBuildingRushedSignal>().ToSingleton();
			injectionBinder.Bind<RushRevealBuildingSignal>().ToSingleton();
			injectionBinder.Bind<SetNewUnlockForStoreTabSignal>().ToSingleton();
			injectionBinder.Bind<SetNewUnlockForBuildMenuSignal>().ToSingleton();
			injectionBinder.Bind<SetInventoryCountForBuildMenuSignal>().ToSingleton();
			injectionBinder.Bind<IncreaseInventoryCountForBuildMenuSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<RemoveUnlockForBuildMenuSignal>().ToSingleton();
			injectionBinder.Bind<ClearNewBuildTabCount>().ToSingleton();
			injectionBinder.Bind<RemoveWorldProgressSignal>().ToSingleton();
			injectionBinder.Bind<CloseAllOtherMenuSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<CloseAllMessageDialogs>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<MessageDialogClosed>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveSalePackSignal>().ToSingleton();
			injectionBinder.Bind<EnablePartyFunMeterSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FadeBlackSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisableBuildMenuButtonSignal>().ToSingleton();
			injectionBinder.Bind<DisableLeisureRushButtonSignal>().ToSingleton();
			injectionBinder.Bind<GoToResourceButtonClickedSignal>().ToSingleton();
			injectionBinder.Bind<IBuildMenuService>().To<BuildMenuService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ICurrencyStoreService>().To<CurrencyStoreService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IFancyUIService>().To<FancyUIService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IGhostComponentService>().To<GhostComponentService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IPositionService>().To<PositionService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IPlayerTrainingService>().To<PlayerTrainingService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<LoadBuddyBarSignal>().ToSingleton();
			injectionBinder.Bind<CloseBuddyFarewellPanelSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<OnDragItemSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<OnDropItemSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<OnDragItemOverDropAreaSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<OnDropItemOverDropAreaSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CreateResourceIconSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveResourceIconSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveResourceIconsByTrackedIdSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<UpdateResourceIconCountSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ShowAllResourceIconsSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<HideAllResourceIconsSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ResetDoubleTapSignal>().ToSingleton();
			injectionBinder.Bind<CreateWayFinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveWayFinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<GetWayFinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SetLimitTikiBarWayFindersSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ShowAllWayFindersSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<HideAllWayFindersSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<UpdateWayFinderPrioritySignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<AddQuestToExistingWayFinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveQuestFromExistingWayFinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<HideFluxWayfinder>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<StopEntranceWayfinderPulseSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SettingsLearnSystemsCategorySelectedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SettingsLearnSystemsCategoryItemSelectedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdatePartyCountDownTextSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisplayCameraControlsSignal>().ToSingleton();
			injectionBinder.Bind<DisplayDisco3DElements>().ToSingleton();
			injectionBinder.Bind<CheckIfShouldStartPartySignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CenterCraftingIconSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<BuildingIdentificationSignal>().ToSingleton();
			injectionBinder.Bind<UpdateSliderSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardTicketClickedSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardStartFillingPrestigeBarSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardTicketDeletedSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardPrestigeSlotFullSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardHighLightFillOrderSignal>().ToSingleton();
			injectionBinder.Bind<CraftingModalClosedSignal>().ToSingleton();
			injectionBinder.Bind<CraftingQueueHintStartSignal>().ToSingleton();
			injectionBinder.Bind<CraftingRecipeHintStartSignal>().ToSingleton();
			injectionBinder.Bind<CraftingRecipeUpdateSignal>().ToSingleton();
			injectionBinder.Bind<CraftingUpdateReagentsSignal>().ToSingleton();
			injectionBinder.Bind<CraftingHintStopSignal>().ToSingleton();
			injectionBinder.Bind<CraftingQueuePositionUpdateSignal>().ToSingleton();
			injectionBinder.Bind<RushDialogConfirmationSignal>().ToSingleton();
			injectionBinder.Bind<UpdateFacebookStateSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowPreviousQuestDialogSignal>().ToSingleton();
			injectionBinder.Bind<ShowPromptSignal>().ToSingleton();
			injectionBinder.Bind<ShowPreviousPromptButtonSiganl>().ToSingleton();
			injectionBinder.Bind<PromptReceivedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PreviousPromptReceivedSignal>().ToSingleton();
			injectionBinder.Bind<QuestBookButtonHighlightSignal>().ToSingleton();
			injectionBinder.Bind<ShowRateAppPanelSignal>().ToSingleton();
			injectionBinder.Bind<UpdateQuestPanelWithNewQuestSignal>().ToSingleton();
			injectionBinder.Bind<UpdateQuestLineProgressSignal>().ToSingleton();
			injectionBinder.Bind<CloseQuestBookSignal>().ToSingleton();
			injectionBinder.Bind<QuestRewardPopupContentsSignal>().ToSingleton();
			injectionBinder.Bind<HideRewardDisplaySignal>().ToSingleton();
			injectionBinder.Bind<HideItemPopupSignal>().ToSingleton();
			injectionBinder.Bind<ExtendItemPopupSignal>().ToSingleton();
			injectionBinder.Bind<FTUELevelUpOpenSignal>().ToSingleton();
			injectionBinder.Bind<FTUELevelUpCloseSignal>().ToSingleton();
			injectionBinder.Bind<FTUECloseBuddySignal>().ToSingleton();
			injectionBinder.Bind<CharacterClickedSignal>().ToSingleton();
			injectionBinder.Bind<GOHCardClickedSignal>().ToSingleton();
			injectionBinder.Bind<RequestCharacterSelectionSignal>().ToSingleton();
			injectionBinder.Bind<SetBuildMenuEnabledSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<EnableBuildMenuFromLairSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SetStorageMenuEnabledSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DebugConsoleController>().ToSingleton();
			injectionBinder.Bind<UpdateIdleMinionCountSignal>().ToSingleton();
			injectionBinder.Bind<UpdateSlotPurchaseButtonSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisableMoveToInventorySignal>().ToSingleton();
			injectionBinder.Bind<FireXPVFXSignal>().ToSingleton();
			injectionBinder.Bind<FireGrindVFXSignal>().ToSingleton();
			injectionBinder.Bind<FirePremiumVFXSignal>().ToSingleton();
			injectionBinder.Bind<SocialPartyFillOrderSetupUISignal>().ToSingleton();
			injectionBinder.Bind<SocialPartyFillOrderButtonMediatorUpdateSignal>().ToSingleton();
			injectionBinder.Bind<SocialPartyFillOrderProfileButtonMediatorUpdateSignal>().ToSingleton();
			injectionBinder.Bind<CurrencyDialogClosedSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<CraftingRecipeDragStartSignal>().ToSingleton();
			injectionBinder.Bind<CraftingRecipeDragStopSignal>().ToSingleton();
			injectionBinder.Bind<DoobersFlownSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisplaySettingsMenuSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisplayDebugButtonSignal>().ToSingleton();
			injectionBinder.Bind<TempHideSettingsMenuSignal>().ToSingleton();
			injectionBinder.Bind<FinishCreateFunMeterSignal>().ToSingleton();
			injectionBinder.Bind<QuestDialogDismissedSignal>().ToSingleton();
			injectionBinder.Bind<IndexSelectionSignal>().ToSingleton();
			injectionBinder.Bind<MarketplaceCloseBuyPanelSignal>().ToSingleton();
			injectionBinder.Bind<MarketplaceOpenBuyPanelSignal>().ToSingleton();
			injectionBinder.Bind<MarketplaceCloseSalePanelSignal>().ToSingleton();
			injectionBinder.Bind<MarketplaceCloseAllSalePanels>().ToSingleton();
			injectionBinder.Bind<MarketplaceOpenSalePanelSignal>().ToSingleton();
			injectionBinder.Bind<SetNewSellItemSignal>().ToSingleton();
			injectionBinder.Bind<UpdateSaleSlotsStateSignal>().ToSingleton();
			injectionBinder.Bind<OpenCreateNewSalePanelSignal>().ToSingleton();
			injectionBinder.Bind<CloseCreateNewSalePanelSignal>().ToSingleton();
			injectionBinder.Bind<UpdateSaleSlotSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdateBuySlotSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<RefreshSlotsSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<RemoveStorageBuildingItemDescriptionSignal>().ToSingleton();
			injectionBinder.Bind<EnableStorageBuildingItemDescriptionSignal>().ToSingleton();
			injectionBinder.Bind<SelectStorageBuildingItemSignal>().ToSingleton();
			injectionBinder.Bind<ShowMinionPartySkipButtonSignal>().ToSingleton();
			injectionBinder.Bind<RevealLevelUpUISignal>().ToSingleton();
			injectionBinder.Bind<DisplayMasterPlanSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<MasterPlanComponentBonusStartedSignal>().ToSingleton();
			injectionBinder.Bind<DisplayMasterPlanOnboardingSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisplayMasterPlanSelectComponentSimpleSignal>().ToSingleton().CrossContext();
			base.mediationBinder.Bind<OfflineView>().To<OfflineMediator>();
			base.mediationBinder.Bind<BuildMenuView>().To<BuildMenuMediator>();
			base.mediationBinder.Bind<HUDView>().To<HUDMediator>();
			base.mediationBinder.Bind<XPBarFunView>().To<XPBarFunMediator>();
			base.mediationBinder.Bind<RewardReminderHUDView>().To<RewardReminderHUDMediator>();
			base.mediationBinder.Bind<SalepackHUDView>().To<SalepackHUDMediator>();
			base.mediationBinder.Bind<SalePackHUDPanelView>().To<SalePackHUDPanelMediator>();
			base.mediationBinder.Bind<RewardedVideoHUDView>().To<RewardedVideoHUDMediator>();
			base.mediationBinder.Bind<RewardedAdHUDPanelView>().To<RewardedAdHUDPanelMediator>();
			base.mediationBinder.Bind<WatchRewardedAdModalView>().To<WatchRewardedAdModalMediator>();
			base.mediationBinder.Bind<DiscoGlobePanelView>().To<DiscoGlobePanelMediator>();
			base.mediationBinder.Bind<DiscoGlobeView>().To<DiscoGlobeMediator>();
			base.mediationBinder.Bind<GuestOfHonorSelectionView>().To<GuestOfHonorSelectionMediator>();
			base.mediationBinder.Bind<GOH_InfoPanelView>().To<GOH_InfoPanelMediator>();
			base.mediationBinder.Bind<StartPartyPopupView>().To<StartPartyPopupMediator>();
			base.mediationBinder.Bind<PartyOnboardingView>().To<PartyOnboardingMediator>();
			base.mediationBinder.Bind<PartyCameraControlPanelView>().To<PartyCameraControlPanelMediator>();
			base.mediationBinder.Bind<BuffInfoPopupView>().To<BuffInfoPopupMediator>();
			base.mediationBinder.Bind<BuffButtonView>().To<BuffButtonMediator>();
			base.mediationBinder.Bind<SkipPartyButtonView>().To<SkipPartyButtonMediator>();
			base.mediationBinder.Bind<TownHallButtonView>().To<TownHallButtonMediator>();
			base.mediationBinder.Bind<DebrisModalItemView>().To<DebrisModalItemMediator>();
			base.mediationBinder.Bind<DebrisModalView>().To<DebrisModalMediator>();
			base.mediationBinder.Bind<ResourceIconPanelView>().To<ResourceIconPanelMediator>();
			base.mediationBinder.Bind<ResourceIconView>().To<ResourceIconMediator>();
			base.mediationBinder.Bind<WorldProgressPanelView>().To<WorldProgressPanelMediator>();
			base.mediationBinder.Bind<MinionUpgradeTokenHUDInfoView>().To<MinionUpgradeTokenHUDInfoMediator>();
			base.mediationBinder.Bind<MinionLevelTokenView>().To<MinionLevelTokenMediator>();
			base.mediationBinder.Bind<FloatingTextPanelView>().To<FloatingTextPanelMediator>();
			base.mediationBinder.Bind<WayFinderPanelView>().To<WayFinderPanelMediator>();
			base.mediationBinder.Bind<WayFinderView>().To<WayFinderMediator>();
			base.mediationBinder.Bind<QuestWayFinderView>().To<QuestWayFinderMediator>();
			base.mediationBinder.Bind<OrderBoardWayFinderView>().To<OrderBoardWayFinderMediator>();
			base.mediationBinder.Bind<StageBuildingWayFinderView>().To<StageBuildingWayFinderMediator>();
			base.mediationBinder.Bind<TSMWayFinderView>().To<TSMWayFinderMediator>();
			base.mediationBinder.Bind<TSMTriggerWayFinderView>().To<TSMTriggerWayFinderMediator>();
			base.mediationBinder.Bind<TikiBarChildWayFinderView>().To<TikiBarChildWayFinderMediator>();
			base.mediationBinder.Bind<TikiBarParentWayFinderView>().To<TikiBarParentWayFinderMediator>();
			base.mediationBinder.Bind<CabanaChildWayFinderView>().To<CabanaChildWayFinderMediator>();
			base.mediationBinder.Bind<CabanaParentWayFinderView>().To<CabanaParentWayFinderMediator>();
			base.mediationBinder.Bind<StorageBuildingWayFinderView>().To<StorageBuildingWayFinderMediator>();
			base.mediationBinder.Bind<BobPointsAtStuffWayFinderView>().To<BobPointsAtStuffWayFinderMediator>();
			base.mediationBinder.Bind<SpecialEventWayFinderView>().To<SpecialEventWayFinderMediator>();
			base.mediationBinder.Bind<VolcanoLairWayfinderView>().To<VolcanoLairWayfinderMediator>();
			base.mediationBinder.Bind<LairEntranceWayfinderView>().To<LairEntranceWayfinderMediator>();
			base.mediationBinder.Bind<MignetteWayFinderView>().To<MignetteWayFinderMediator>();
			base.mediationBinder.Bind<MoveBuildingWayFinderView>().To<MoveBuildingWayFinderMediator>();
			base.mediationBinder.Bind<MIBRewardView>().To<MIBRewardMediator>();
			base.mediationBinder.Bind<HindsightContentView>().To<HindsightContentMediator>();
			base.mediationBinder.Bind<MinionUpgradeView>().To<MinionUpgradeMediator>();
			base.mediationBinder.Bind<MinionLevelSelectorView>().To<MinionLevelSelectorMediator>();
			base.mediationBinder.Bind<MinionBenefitView>().To<MinionBenefitMediator>();
			base.mediationBinder.Bind<MasterPlanOnboardingView>().To<MasterPlanOnboardingMediator>();
			base.mediationBinder.Bind<MasterPlanSelectComponentSimpleView>().To<MasterPlanSelectComponentSimpleMediator>();
			injectionBinder.Bind<RefreshFromIndexSignal>().ToSingleton();
			injectionBinder.Bind<RefreshAllOfTypeSignal>().ToSingleton();
			injectionBinder.Bind<RefreshAllOfTypeArgsSignal>().ToSingleton();
			injectionBinder.Bind<RefreshFromIndexArgsSignal>().ToSingleton();
			base.mediationBinder.Bind<MasterPlanSelectComponentView>().To<MasterPlanSelectComponentMediator>();
			base.mediationBinder.Bind<MasterPlanComponentInfoView>().To<MasterPlanComponentInfoMediator>();
			base.mediationBinder.Bind<CurrencyButtonView>().To<CurrencyButtonMediator>();
			base.mediationBinder.Bind<FloatingTextView>().To<FloatingTextMediator>();
			base.mediationBinder.Bind<ProgressBarView>().To<ProgressBarMediator>();
			base.mediationBinder.Bind<ItemListView>().To<ItemListMediator>();
			base.mediationBinder.Bind<TabMenuView>().To<TabMenuMediator>();
			base.mediationBinder.Bind<ResourceModalView>().To<ResourceModalMediator>();
			base.mediationBinder.Bind<MinionSliderView>().To<MinionSliderMediator>();
			base.mediationBinder.Bind<MignettePlayConfirmView>().To<MignettePlayConfirmMediator>();
			base.mediationBinder.Bind<MignetteCallMinionsView>().To<MignetteCallMinionsMediator>();
			base.mediationBinder.Bind<MignetteHUDView>().To<MignetteHUDMediator>();
			base.mediationBinder.Bind<MignetteScoreSummaryView>().To<MignetteScoreSummaryMediator>();
			base.mediationBinder.Bind<PopupConfirmationView>().To<PopupConfirmationMediator>();
			base.mediationBinder.Bind<DCNConfirmationView>().To<DCNConfirmationMediator>();
			base.mediationBinder.Bind<StickerbookModalView>().To<StickerbookModalMediator>();
			base.mediationBinder.Bind<StickerbookCharacterView>().To<StickerbookCharacterMediator>();
			base.mediationBinder.Bind<StickerbookStickerView>().To<StickerbookStickerMediator>();
			base.mediationBinder.Bind<StickerbookDescriptionView>().To<StickerbookDescriptionMediator>();
			base.mediationBinder.Bind<CraftingPopupView>().To<CraftingPopupMediator>();
			base.mediationBinder.Bind<GenericPopupView>().To<GenericPopupMediator>();
			base.mediationBinder.Bind<MinionPartyInfoPopupView>().To<MinionPartyInfoPopupMediator>();
			base.mediationBinder.Bind<MinionPartyCountDownInfoPopupView>().To<MinionPartyCountDownInfoPopupMediator>();
			base.mediationBinder.Bind<PartyMeterView>().To<PartyMeterMediator>();
			base.mediationBinder.Bind<PlayerTrainingView>().To<PlayerTrainingMediator>();
			base.mediationBinder.Bind<DragDropItemView>().To<DragDropItemMediator>();
			base.mediationBinder.Bind<DropAreaView>().To<DropAreaMediator>();
			base.mediationBinder.Bind<CompositeBuildingMenuView>().To<CompositeBuildingMenuMediator>();
			base.mediationBinder.Bind<MoveBuildingMenuView>().To<MoveBuildingMenuMediator>();
			base.mediationBinder.Bind<RandomDropView>().To<RandomDropMediator>();
			base.mediationBinder.Bind<CurrencyWarningDialogView>().To<CurrencyWarningDialogMediator>();
			base.mediationBinder.Bind<CraftingModalView>().To<CraftingModalMediator>();
			base.mediationBinder.Bind<CraftingQueueView>().To<CraftingQueueMediator>();
			base.mediationBinder.Bind<CraftingRecipeView>().To<CraftingRecipeMediator>();
			base.mediationBinder.Bind<OrderBoardModalView>().To<OrderBoardModalMediator>();
			base.mediationBinder.Bind<OrderBoardTicketView>().To<OrderBoardTicketMediator>();
			base.mediationBinder.Bind<OrderBoardTicketDetailView>().To<OrderBoardTicketDetailMediator>();
			base.mediationBinder.Bind<BuddyBarView>().To<BuddyBarMediator>();
			base.mediationBinder.Bind<QuestPanelView>().To<QuestPanelMediator>();
			base.mediationBinder.Bind<QuestLineProgressBarView>().To<QuestLineProgressBarMediator>();
			base.mediationBinder.Bind<ProceduralQuestView>().To<ProceduralQuestMediator>();
			base.mediationBinder.Bind<NotificationsView>().To<NotificationsMediator>();
			base.mediationBinder.Bind<QuestView>().To<QuestMediator>();
			base.mediationBinder.Bind<QuestStepView>().To<QuestStepMediator>();
			base.mediationBinder.Bind<QuestRewardView>().To<QuestRewardMediator>();
			base.mediationBinder.Bind<QuestTimerView>().To<QuestTimerMediator>();
			base.mediationBinder.Bind<QuestRewardPopupView>().To<QuestRewardPopupMediator>();
			base.mediationBinder.Bind<LevelUpRewardView>().To<LevelUpRewardMediator>();
			base.mediationBinder.Bind<GenericRushDialogView>().To<GenericRushDialogMediator>();
			base.mediationBinder.Bind<LandExpansionRushDialogView>().To<LandExpansionRushDialogMediator>();
			base.mediationBinder.Bind<StorageBuildingModalView>().To<StorageBuildingModalMediator>();
			base.mediationBinder.Bind<StorageBuildingSaleSlotView>().To<StorageBuildingSaleSlotMediator>();
			base.mediationBinder.Bind<StorageBuildingItemView>().To<StorageBuildingItemMediator>();
			base.mediationBinder.Bind<FadeBlackView>().To<FadeBlackMediator>();
			base.mediationBinder.Bind<SellPanelView>().To<SellPanelMediator>();
			base.mediationBinder.Bind<BuyMarketplacePanelView>().To<BuyMarketplacePanelMediator>();
			base.mediationBinder.Bind<CreateNewSellView>().To<CreateNewSellMediator>();
			base.mediationBinder.Bind<SellQuantityButtonView>().To<SellQuantityButtonMediator>();
			base.mediationBinder.Bind<BuyMarketplaceSlotView>().To<BuyMarketplaceSlotMediator>();
			base.mediationBinder.Bind<StorageBuildingItemInfoView>().To<StorageBuildingItemInfoMediator>();
			base.mediationBinder.Bind<UpSellModalView>().To<UpSellModalMediator>();
			base.mediationBinder.Bind<UpSellMessagingModalView>().To<UpSellMessagingModalMediator>();
			base.mediationBinder.Bind<UpSellItemView>().To<UpSellItemMediator>();
			base.mediationBinder.Bind<MessagePopupView>().To<MessagePopupMediator>();
			base.mediationBinder.Bind<TipsPopupView>().To<TipsPopupMediator>();
			base.mediationBinder.Bind<QuestDialogView>().To<QuestDialogMediator>();
			base.mediationBinder.Bind<SkrimView>().To<SkrimMediator>();
			base.mediationBinder.Bind<HUDSettingsMenuPanelView>().To<HUDSettingsMenuPanelMediator>();
			base.mediationBinder.Bind<SettingsLearnSystemsCategoryView>().To<SettingsLearnSystemsCategoryMediator>();
			base.mediationBinder.Bind<SettingsLearnSystemsCategoryPanelView>().To<SettingsLearnSystemsCategoryPanelMediator>();
			base.mediationBinder.Bind<SettingsLearnSystemsCategoryItemPanelView>().To<SettingsLearnSystemsCategoryItemPanelMediator>();
			base.mediationBinder.Bind<SettingsLearnSystemsCategoryItemView>().To<SettingsLearnSystemsCategoryItemMediator>();
			base.mediationBinder.Bind<SettingsMenuView>().To<SettingsMenuMediator>();
			base.mediationBinder.Bind<SettingsPanelView>().To<SettingsPanelMediator>();
			base.mediationBinder.Bind<FAQPanelView>().To<FAQPanelMediator>();
			base.mediationBinder.Bind<CreditsPanelView>().To<CreditsPanelMediator>();
			base.mediationBinder.Bind<AboutPanelView>().To<AboutPanelMediator>();
			base.mediationBinder.Bind<UsageSharingView>().To<UsageSharingMediator>();
			base.mediationBinder.Bind<HelpPanelView>().To<HelpPanelMediator>();
			base.mediationBinder.Bind<NotificationsPanelView>().To<NotificationsPanelMediator>();
			base.mediationBinder.Bind<MockStoreView>().To<MockStoreMediator>();
			base.mediationBinder.Bind<RateAppPanelView>().To<RateAppPanelMediator>();
			base.mediationBinder.Bind<BillingNotAvailablePanelView>().To<BillingNotAvailablePanelMediator>();
			base.mediationBinder.Bind<BuddyWelcomePanelView>().To<BuddyWelcomePanelMediator>();
			base.mediationBinder.Bind<COPPAAgeGatePanelView>().To<COPPAAgeGatePanelMediator>();
			base.mediationBinder.Bind<TownHallDialogView>().To<TownHallDialogMediator>();
			base.mediationBinder.Bind<NudgeUpgradeDialogView>().To<NudgeUpgradeDialogMediator>();
			base.mediationBinder.Bind<SocialPartyFBConnectView>().To<SocialPartyFBConnectMediator>();
			base.mediationBinder.Bind<SocialPartyInviteAlertView>().To<SocialPartyInviteAlertMediator>();
			base.mediationBinder.Bind<SocialPartyFillOrderView>().To<SocialPartyFillOrderMediator>();
			base.mediationBinder.Bind<SocialPartyFillOrderButtonView>().To<SocialPartyFillOrderButtonMediator>();
			base.mediationBinder.Bind<SocialPartyFillOrderProfileButtonView>().To<SocialPartyFillOrderProfileButtonMediator>();
			base.mediationBinder.Bind<SocialPartyEventEndView>().To<SocialPartyEventEndMediator>();
			base.mediationBinder.Bind<SocialPartyEventCompletedView>().To<SocialPartyEventCompletedMediator>();
			base.mediationBinder.Bind<SocialPartyNoEventView>().To<SocialPartyNoEventMediator>();
			base.mediationBinder.Bind<VillainLairUnlockRushDialogView>().To<VillainLairUnlockRushDialogMediator>();
			base.mediationBinder.Bind<VillainLairPortalEntryView>().To<VillainLairPortalEntryMediator>();
			base.mediationBinder.Bind<VillainLairPortalResourcesView>().To<VillainLairPortalResourcesMediator>();
			base.mediationBinder.Bind<VillainLairResourceModalView>().To<VillainLairResourceModalMediator>();
			base.mediationBinder.Bind<ResourcePlotUnlockRushDialogView>().To<ResourcePlotUnlockRushDialogMediator>();
			base.mediationBinder.Bind<FacebookConnectPopupView>().To<FacebookConnectPopupMediator>();
			base.mediationBinder.Bind<ParticleSystemAudioHandlerView>().To<ParticleSystemAudioHandlerMediator>();
			base.mediationBinder.Bind<LeisureBuildingMenuView>().To<LeisureBuildingMenuMediator>();
			base.mediationBinder.Bind<TSMGiftModalView>().To<TSMGiftModalMediator>();
			base.mediationBinder.Bind<TSMHelpModalView>().To<TSMHelpModalMediator>();
			base.mediationBinder.Bind<TSMItemPanelView>().To<TSMItemPanelMediator>();
			base.mediationBinder.Bind<MysteryMinionTeaserSelectionView>().To<MysteryMinionTeaserSelectionMediator>();
			base.mediationBinder.Bind<HelpTipView>().To<HelpTipMediator>();
			base.mediationBinder.Bind<AnimatorStateView>().To<AnimatorStateMediator>();
			base.mediationBinder.Bind<MasterPlanRewardView>().To<MasterPlanRewardMediator>();
			base.mediationBinder.Bind<MasterPlanCooldownAlertView>().To<MasterPlanCooldownAlertMediator>();
			base.mediationBinder.Bind<PopulationBenefitView>().To<PopulationBenefitMediator>();
			base.mediationBinder.Bind<PetsPopupView>().To<PetsPopupMediator>();
			base.commandBinder.Bind<StartSignal>().To<UIStartCommand>();
			base.commandBinder.Bind<LoadGUISignal>().To<LoadGUICommand>();
			base.commandBinder.Bind<CreateFunMeterSignal>().To<CreateFunMeterCommand>();
			base.commandBinder.Bind<CreatePartyMeterSignal>().To<CreatePartyMeterCommand>();
			base.commandBinder.Bind<LoadDefinitionForUISignal>().To<LoadDefinitionForUICommand>();
			base.commandBinder.Bind<CurrencyButtonClickSignal>().To<CurrencyButtonClickCommand>();
			base.commandBinder.Bind<PurchaseSalePackSignal>().To<PurchaseSalePackCommand>();
			base.commandBinder.Bind<FinishPurchasingSalePackSignal>().To<FinishPurchasingSalePackCommand>();
			base.commandBinder.Bind<ShowBuildingDetailMenuSignal>().To<ShowBuildingDetailMenuCommand>();
			base.commandBinder.Bind<ToggleFPSGraphSignal>().To<ToggleFPSGraphCommand>();
			base.commandBinder.Bind<TryCollectLeisurePointsSignal>().To<TryCollectLeisurePointsCommand>();
			base.commandBinder.Bind<ShowBuffInfoPopupSignal>().To<ShowBuffInfoPopupCommand>();
			injectionBinder.Bind<BuffInfoPopupClosedSignal>().ToSingleton();
			FastPooledCommandBinder<Vector3, DestinationType, int, bool>.Bind<SpawnDooberSignal, SpawnDooberCommand>(injectionBinder);
			FastPooledCommandBinder<MignetteHUDView, Vector3, int, bool>.Bind<SpawnMignetteDooberSignal, SpawnMignetteDooberCommand>(injectionBinder);
			base.commandBinder.Bind<ShowBridgeUISignal>().To<ShowBridgeBuildingUICommand>();
			base.commandBinder.Bind<CraftingCompleteSignal>().To<CraftingCompleteCommand>();
			base.commandBinder.Bind<RemoveCraftingQueueSignal>().To<RemoveCraftingQueueCommand>();
			base.commandBinder.Bind<DisplayRandomDropIconSignal>().To<DisplayRandomDropCommand>();
			base.commandBinder.Bind<OpenStoreHighlightItemSignal>().To<OpenStoreHighlightItemCommand>();
			base.commandBinder.Bind<DragFromStoreSignal>().To<DragFromStoreCommand>();
			base.commandBinder.Bind<DisplayDLCDialogSignal>().To<DisplayDLCDialogCommand>();
			base.commandBinder.Bind<ShowBuddyWelcomePanelUISignal>().To<ShowBuddyWelcomePanelUICommand>();
			base.commandBinder.Bind<StartPremiumPurchaseSignal>().To<StartPremiumPurchaseCommand>();
			base.commandBinder.Bind<FinishPremiumPurchaseSignal>().To<FinishPremiumPurchaseCommand>();
			base.commandBinder.Bind<CancelPremiumPurchaseSignal>().To<CancelPremiumPurchaseCommand>();
			base.commandBinder.Bind<ShowMockStoreDialogSignal>().To<ShowMockStoreDialogCommand>();
			base.commandBinder.Bind<ShowQuestPanelSignal>().To<ShowQuestPanelCommand>();
			base.commandBinder.Bind<ShowProceduralQuestPanelSignal>().To<ShowProceduralQuestPanelCommand>();
			base.commandBinder.Bind<ShowQuestRewardSignal>().To<ShowQuestRewardCommand>();
			base.commandBinder.Bind<DisplayItemPopupSignal>().To<DisplayItemPopupCommand>();
			base.commandBinder.Bind<DisplayMinionLevelTokenSignal>().To<DisplayMinionLevelTokenCommand>();
			base.commandBinder.Bind<ShowNeedXMinionsSignal>().To<ShowNeedXMinionsCommand>();
			base.commandBinder.Bind<HideHUDAndIconsSignal>().To<HideHUDAndIconsCommand>();
			base.commandBinder.Bind<ShowWorldCanvasSignal>().To<ShowWorldCanvasCommand>();
			base.commandBinder.Bind<DisplayLevelUpRewardSignal>().To<DisplayLevelUpRewardCommand>();
			base.commandBinder.Bind<OpenRateAppPageSignal>().To<OpenRateAppPageCommand>();
			base.commandBinder.Bind<ShouldRateAppSignal>().To<ShouldRateAppCommand>();
			base.commandBinder.Bind<ShowRateAppPanelSignal>().To<ShowRateAppPanelCommand>();
			base.commandBinder.Bind<ShowBillingNotAvailablePanelSignal>().To<ShowBillingNotAvailablePanelCommand>();
			base.commandBinder.Bind<ShowTipsSignal>().To<ShowTipsCommand>();
			base.commandBinder.Bind<PopupMessageSignal>().To<PopupMessageCommand>();
			base.commandBinder.Bind<PopupMessageAtLocationSignal>().To<PopupMessageAtLocationCommand>();
			base.commandBinder.Bind<PopupMessageWithComponentBuildingSignal>().To<PopupMessageWithComponentBuildingCommand>();
			base.commandBinder.Bind<SetupDeepLinkSignal>().To<SetupDeepLinkCommand>();
			injectionBinder.Bind<HUDChangedSiblingIndexSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<OpenUpSellModalSignal>().To<OpenUpSellModalCommand>();
			base.commandBinder.Bind<StartUpSellImpressionSignal>().To<StartUpSellImpressionCommand>();
			base.commandBinder.Bind<ProcessUpSellImpressionSignal>().To<ProcessUpSellImpressionCommand>();
			base.mediationBinder.Bind<CurrencyStoreView>().To<CurrencyStoreMediator>();
			base.commandBinder.Bind<DisplayCurrencyStoreSignal>().To<DisplayCurrencyStoreCommand>();
			base.commandBinder.Bind<OpenRewardedAdWatchModalSignal>().To<OpenRewardedAdWatchModalCommand>();
			injectionBinder.Bind<DeclineRewardedAdShowSignal>().ToSingleton();
			base.mediationBinder.Bind<RewardedAdPickRewardModalView>().To<RewardedAdPickRewardModalMediator>();
			base.commandBinder.Bind<OpenRewardedAdDailyRewardPickerModalSignal>().To<OpenRewardedAdDailyRewardPickerModalCommand>();
			base.commandBinder.Bind<ShowDebugVisualizerSignal>().To<ShowDebugVisualizerCommand>();
			base.commandBinder.Bind<UserAgeForCOPPAReceivedSignal>().To<UserAgeForCOPPAReceivedCommand>();
			base.commandBinder.Bind<ShowSocialPartyStartSignal>().To<ShowSocialPartyStartCommand>();
			base.commandBinder.Bind<ShowSocialPartyRewardSignal>().To<ShowSocialPartyRewardCommand>();
			base.commandBinder.Bind<ShowSocialPartyInviteSignal>().To<ShowSocialPartyInviteCommand>();
			base.commandBinder.Bind<ShowSocialPartyInviteAlertSignal>().To<ShowSocialPartyInviteAlertCommand>();
			base.commandBinder.Bind<ShowSocialPartyFillOrderSignal>().To<ShowSocialPartyFillOrderCommand>();
			base.commandBinder.Bind<ShowSocialPartyFillOrderButtonSignal>().To<ShowSocialPartyFillOrderButtonCommand>();
			base.commandBinder.Bind<ShowSocialPartyFillOrderProfileButtonSignal>().To<ShowSocialPartyFillOrderProfileButtonCommand>();
			base.commandBinder.Bind<ShowSocialPartyFBConnectSignal>().To<ShowSocialPartyFBConnectCommand>();
			base.commandBinder.Bind<ShowSocialPartyEventEndSignal>().To<ShowSocialPartyEventEndCommand>();
			base.commandBinder.Bind<ShowSocialPartyEventCompletedSignal>().To<ShowSocialPartyEventCompletedCommand>();
			base.commandBinder.Bind<ShowSocialPartyNoEventSignal>().To<ShowSocialPartyNoEventCommand>();
			base.commandBinder.Bind<ShowFacebookConnectPopupSignal>().To<ShowFacebookConnectPopupCommand>();
			base.commandBinder.Bind<OpenBuyBuildingModelSignal>().To<OpenBuyBuildingModelCommand>();
			base.commandBinder.Bind<OpenSellBuildingModalSignal>().To<OpenSellBuildingModelCommand>();
			base.commandBinder.Bind<DisplayMasterPlanSignal>().To<DisplayMasterPlanCommand>();
			base.commandBinder.Bind<DisplayMasterPlanBonusSignal>().To<DisplayMasterPlanBonusCommand>();
			base.commandBinder.Bind<DisplayMasterPlanBonusRewardSignal>().To<DisplayMasterPlanBonusRewardCommand>();
			base.commandBinder.Bind<DisplayMasterPlanComponentBonusDialogSignal>().To<DisplayMasterPlanComponentBonusDialogCommand>();
			base.commandBinder.Bind<DisplayMasterPlanOnboardingSignal>().To<DisplayMasterPlanOnboardingCommand>();
			base.commandBinder.Bind<DisplayMasterPlanSelectComponentSimpleSignal>().To<DisplayMasterPlanSelectComponentSimpleCommand>();
			base.commandBinder.Bind<AddFPSCounterSignal>().To<AddFPSCounterCommand>();
			base.commandBinder.Bind<CreateSkrimSignal>().To<CreateSkrimCommand>();
			base.commandBinder.Bind<ShowPetsXPromoSignal>().To<ShowPetsXPromoCommand>();
		}

		protected override void PostBindings()
		{
			if (Context.firstContext != this)
			{
				AudioListener componentInChildren = (base.contextView as GameObject).GetComponentInChildren<AudioListener>();
				if (componentInChildren != null)
				{
					componentInChildren.enabled = false;
				}
			}
		}
	}
}
