using Kampai.Common;
using Kampai.Common.Controller;
using Kampai.Common.Service.Audio;
using Kampai.Game;
using Kampai.Game.Mignette;
using Kampai.Game.Mtx;
using Kampai.Main.View;
using Kampai.UI.Controller;
using Kampai.UI.View;
using Kampai.Util;
using UnityEngine;
using strange.extensions.context.api;

namespace Kampai.Main
{
	public class MainContext : BaseContext
	{
		public MainContext()
		{
		}

		public MainContext(MonoBehaviour view, bool autoStartup)
			: base(view, autoStartup)
		{
		}

		protected override void MapBindings()
		{
			injectionBinder.Bind<ICrossContextCapable>().ToValue(this).ToName(MainElement.CONTEXT)
				.CrossContext();
			injectionBinder.Bind<AppStartCompleteSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<IPickService>().To<PickService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ICameraControlsService>().To<CameraControlsService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IMignetteService>().To<MignetteService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<PickControllerModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<IFMODService>().To<FMODService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<DecoGridModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<MoveAudioListenerSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayLocalAudioOneShotSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayLocalAudioSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<StartLoopingAudioSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<StopLocalAudioSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayMinionStateAudioSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayGlobalSoundFXSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<QueueLocalAudioCommandSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayGlobalSoundFXOneShotSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<DisableCameraBehaviourSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<EnableCameraBehaviourSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PlayGlobalMusicSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PlayMignetteMusicSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<LoadUICompleteSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdateUIButtonsSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdatePartyPointButtonsSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DisplayWorldProgressSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ConstructionCompleteSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ABTestSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ShowClientUpgradeDialogSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ShowForcedClientUpgradeScreenSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<DisplayFloatingTextSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RemoveFloatingTextSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ToggleAllFloatingTextSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ScheduleNotificationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SavePlayerSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PlayerSavedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AutoSavePlayerStateSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SocialLoginSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialLoginSuccessSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialLoginFailureSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialLogoutSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialInitAllServicesSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialInitSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialEventAvailableSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialEventWayfinderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialPartyFillOrderCompleteSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ReLinkAccountSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<LinkAccountSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<UnlinkAccountSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SocialInitSuccessSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<GooglePlayServerAuthCodeReceivedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SocialInitFailureSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<GameCenterAuthTokenCompleteSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<LoadAnimatorStateInfoSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UnloadAnimatorStateInfoSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<string>().ToValue(PlayerDataSource()).ToName("devPlayerPath");
			injectionBinder.Bind<IUserSessionService>().To<UserSessionService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IPlayerService>().To<PurchaseAwarePlayerService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IPlayerDurationService>().To<PlayerDurationService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<PlayerSessionCountUpdatedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ILandExpansionService>().To<LandExpansionService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ILandExpansionConfigService>().To<LandExpansionConfigService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IConfigurationsService>().To<ConfigurationsService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IResourceService>().To<ResourceService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IDevicePrefsService>().To<DevicePrefsService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<UserSessionGrantedSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<IMarketplaceService>().To<MarketplaceService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<IPushNotificationService>().To<PushNotificationService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ISpecialEventService>().To<SpecialEventService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ISocialService>().To<FacebookService>().ToName(SocialServices.FACEBOOK)
				.CrossContext()
				.ToSingleton();
			injectionBinder.Bind<ISocialService>().To<GameCenterService>().ToName(SocialServices.GAMECENTER)
				.CrossContext()
				.ToSingleton();
			injectionBinder.Bind<ISocialService>().To<GooglePlayService>().ToName(SocialServices.GOOGLEPLAY)
				.CrossContext()
				.ToSingleton();
			injectionBinder.Bind<ITelemetryUtil>().To<TelemetryUtil>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<PurchaseMarketplaceSlotSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdateStorageItemsSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CollectMarketplaceSaleSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<LoadMarketplaceOverridesSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ISynergyService>().To<SynergyService>().CrossContext()
				.ToSingleton();
			injectionBinder.Bind<LoadPlayerSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<IHindsightService>().To<HindsightService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<HindsightContentPreloadSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<HindsightContentDismissSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ISwrveService>().To<SwrveService>().CrossContext()
				.ToSingleton();
			injectionBinder.Bind<ISupersonicService>().To<SupersonicService>().CrossContext()
				.ToSingleton();
			injectionBinder.Bind<ReloadGameSignal>().CrossContext().ToSingleton();
			injectionBinder.Bind<MignetteCallMinionsSignal>().CrossContext().ToSingleton();
			injectionBinder.Bind<MignetteCallMinionsModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<LoadMTXStoreSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<RefreshMTXStoreSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PremiumCurrencyCatalogUpdatedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<StartMtxReceiptValidationSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<FinishMtxReceiptValidationSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ProcessNextPendingTransactionSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<RestoreMtxPurchaseSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<IMtxReceiptValidationService>().To<MtxReceiptValidationService>().ToSingleton()
				.CrossContext();
			base.commandBinder.Bind<StartMtxReceiptValidationSignal>().To<StartMtxReceiptValidationCommand>();
			base.commandBinder.Bind<FinishMtxReceiptValidationSignal>().To<FinishMtxReceiptValidationCommand>();
			base.commandBinder.Bind<ProcessNextPendingTransactionSignal>().To<ProcessNextPendingTransactionCommand>();
			base.commandBinder.Bind<RestoreMtxPurchaseSignal>().To<RestoreMtxPurchaseCommand>();
			injectionBinder.Bind<FinishPremiumPurchaseSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<ICurrencyService>().To<NimbleCurrencyService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<SupersonicVideoAdAvailabilityChangedSignal>().CrossContext().ToSingleton();
			injectionBinder.Bind<SupersonicVideoAdShowSignal>().CrossContext().ToSingleton();
			injectionBinder.Bind<SupersonicVideoAdRewardedSignal>().CrossContext().ToSingleton();
			injectionBinder.Bind<PauseSoundSignal>().ToSingleton().CrossContext();
			BindPlayerCommand();
			base.commandBinder.Bind<MainCompleteSignal>().To<MainCompleteCommand>();
			base.commandBinder.Bind<CheckDLCTierSignal>().To<CheckDLCTierCommand>();
			base.commandBinder.Bind<LoadDefinitionsSignal>().To<LoadDefinitionsCommand>();
			base.commandBinder.Bind<FetchDefinitionsSignal>().To<FetchDefinitionsCommand>();
			base.commandBinder.Bind<DefinitionsFetchedSignal>().To<DefinitionsFetchedCommand>();
			base.commandBinder.Bind<DefinitionsChangedSignal>().To<DefinitionsChangedCommand>();
			base.commandBinder.Bind<LoadConfigurationSignal>().To<LoadConfigurationsCommand>();
			base.commandBinder.Bind<RegisterUserSignal>().To<RegisterUserCommand>();
			base.commandBinder.Bind<UserRegisteredSignal>().To<UserRegisteredCommand>();
			base.commandBinder.Bind<UpdateUserSignal>().To<UpdateUserCommand>();
			base.commandBinder.Bind<SetupDeepLinkSignal>().To<SetupDeepLinkCommand>();
			base.commandBinder.Bind<SetupHockeyAppUserSignal>().To<SetupHockeyAppUserCommand>();
			base.commandBinder.Bind<SetupHockeyAppSignal>().To<SetupHockeyAppCommand>();
			base.commandBinder.Bind<AppStartCompleteSignal>().To<AppStartCompleteCommand>();
			base.commandBinder.Bind<StartSignal>().To<MainStartCommand>();
			base.commandBinder.Bind<SetupEventSystemSignal>().To<SetupEventSystemCommand>();
			base.commandBinder.Bind<ReloadGameSignal>().To<ReloadGameCommand>();
			base.commandBinder.Bind<ConfigurationsLoadedSignal>().To<ConfigurationsLoadedCommand>();
			base.commandBinder.Bind<OpenRateAppPageSignal>().To<OpenRateAppPageCommand>();
			base.commandBinder.Bind<LoadSharedBundlesSignal>().To<LoadSharedBundlesCommand>();
			base.commandBinder.Bind<ABTestSignal>().To<ABTestCommand>();
			base.commandBinder.Bind<SetupSwrveSignal>().To<SetupSwrveCommand>();
			base.commandBinder.Bind<ABTestResourcesUpdatedSignal>().To<ABTestResourcesUpdatedCommand>();
			base.commandBinder.Bind<SetupLoggingTargetsSignal>().To<SetupLoggingTargetsCommand>();
			base.commandBinder.Bind<LoadMarketplaceOverridesSignal>().To<LoadMarketplaceOverridesCommand>();
			base.commandBinder.Bind<OpenHelpSignal>().To<OpenHelpCommand>();
			base.commandBinder.Bind<DisplayHindsightContentSignal>().To<DisplayHindsightContentCommand>();
			base.commandBinder.Bind<HindsightContentRequestSignal>().To<HindsightContentRequestCommand>();
			base.commandBinder.Bind<SetupSupersonicSignal>().To<SetupSupersonicCommand>();
			base.commandBinder.Bind<CheckUpgradeSignal>().To<CheckUpgradeCommand>();
			base.commandBinder.Bind<KillSwitchChangedSignal>().To<KillSwitchChangedCommand>();
			base.commandBinder.Bind<NimbleOTSignal>().To<NimbleOTCommand>();
			base.commandBinder.Bind<ReloadConfigurationsPeriodicSignal>().To<ReloadConfigurationsPeriodicCommand>();
			base.commandBinder.Bind<SetupNativeAlertManagerSignal>().To<SetupNativeAlertManagerCommand>();
			base.commandBinder.Bind<ShowClientUpgradeDialogSignal>().To<ShowClientUpgradeDialogCommand>();
			base.commandBinder.Bind<ShowForcedClientUpgradeScreenSignal>().To<ShowForcedClientUpdateScreenCommand>();
			base.commandBinder.Bind<LoadAudioSignal>().To<LoadAudioCommand>();
			base.commandBinder.Bind<DownloadManifestSignal>().To<DownloadManifestCommand>();
			base.commandBinder.Bind<PostDownloadManifestSignal>().To<PostDownloadManifestCommand>();
			base.commandBinder.Bind<DLCLevelChangedSignal>().To<DLCLevelChangedCommand>();
			base.commandBinder.Bind<SocialLoginSignal>().To<SocialLoginCommand>();
			base.commandBinder.Bind<SocialInitAllServicesSignal>().To<SocialInitAllServicesCommand>();
			base.commandBinder.Bind<SocialInitSignal>().To<SocialInitCommand>();
			base.commandBinder.Bind<SocialLogoutSignal>().To<SocialLogoutCommand>();
			base.commandBinder.Bind<SocialInitFailureSignal>().To<SocialInitFailureCommand>();
			base.commandBinder.Bind<SocialInitSuccessSignal>().To<SocialInitSuccessCommand>();
			base.commandBinder.Bind<SocialLoginFailureSignal>().To<SocialLoginFailureCommand>();
			base.commandBinder.Bind<SocialLoginSuccessSignal>().To<SocialLoginSuccessCommand>();
			base.commandBinder.Bind<SocialEventAvailableSignal>().To<SocialEventAvailableCommand>();
			base.commandBinder.Bind<SocialEventWayfinderSignal>().To<SocialEventWayfinderCommand>();
			base.commandBinder.Bind<SocialPartyFillOrderCompleteSignal>().To<SocialPartyFillOrderCompleteCommand>();
			base.commandBinder.Bind<LinkAccountSignal>().To<LinkAccountCommand>();
			base.commandBinder.Bind<ReLinkAccountSignal>().To<ReLinkAccountCommand>();
			base.commandBinder.Bind<UnlinkAccountSignal>().To<UnlinkAccountCommand>();
			base.commandBinder.Bind<InitLocalizationServiceSignal>().To<InitLocalizationServiceCommand>();
			base.commandBinder.Bind<LoadLocalizationServiceSignal>().To<LoadLocalizationServiceCommand>();
			base.commandBinder.Bind<LoadDevicePrefsSignal>().To<LoadDevicePrefsCommand>();
			base.commandBinder.Bind<SetupManifestSignal>().To<SetupManifestCommand>();
			base.commandBinder.Bind<LogClientMetricsSignal>().To<LogClientMetricsCommand>();
			base.commandBinder.Bind<LogTapEventMetricsSignal>().To<LogTapEventMetricsCommand>();
			base.commandBinder.Bind<LoadUICompleteSignal>().To<StartCOPPAFlowCommand>();
			base.commandBinder.Bind<SetupPushNotificationsSignal>().To<SetupPushNotificationsCommand>();
			base.commandBinder.Bind<LogTelemetrySignal>().To<LogTelemetryCommand>();
			base.commandBinder.Bind<PauseSoundSignal>().To<PauseSoundCommand>();
			base.mediationBinder.Bind<NetworkMonitorView>().To<NetworkMonitorMediator>();
		}

		protected virtual void BindPlayerCommand()
		{
			base.commandBinder.Bind<LoadPlayerSignal>().To<LoadPlayerCommand>();
			base.commandBinder.Bind<LoadedPlayerDataSignal>().To<LoadedPlayerDataCommand>();
			base.commandBinder.Bind<LoginUserSignal>().To<LoginUserCommand>();
			base.commandBinder.Bind<AutoSavePlayerStateSignal>().To<AutoSavePlayerStateCommand>();
		}

		protected virtual string PlayerDataSource()
		{
			return "test_player";
		}
	}
}
