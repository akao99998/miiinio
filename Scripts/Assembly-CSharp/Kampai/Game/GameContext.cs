using System.Collections.Generic;
using Kampai.Common;
using Kampai.Game.Controller;
using Kampai.Game.Controller.Audio;
using Kampai.Game.Mignette;
using Kampai.Game.Mignette.View;
using Kampai.Game.Trigger;
using Kampai.Game.View;
using Kampai.Game.View.Audio;
using Kampai.Main;
using Kampai.UI.View;
using Kampai.Util;
using Kampai.Util.AnimatorStateInfo;
using UnityEngine;
using strange.extensions.context.api;

namespace Kampai.Game
{
	public class GameContext : BaseContext
	{
		public GameContext()
		{
		}

		public GameContext(MonoBehaviour view, bool autoStartup)
			: base(view, autoStartup)
		{
		}

		protected override void MapBindings()
		{
			injectionBinder.Bind<ICrossContextCapable>().ToValue(this).ToName(GameElement.CONTEXT)
				.CrossContext();
			injectionBinder.Bind<IInput>().To<TouchInput>().ToSingleton();
			injectionBinder.Bind<Environment>().ToSingleton();
			injectionBinder.Bind<IEnvironmentNavigation>().ToValue(injectionBinder.GetInstance<Environment>());
			injectionBinder.Bind<EnvironmentBuilder>().ToSingleton();
			injectionBinder.Bind<INotificationService>().To<NotificationService>().ToSingleton();
			Camera main = Camera.main;
			injectionBinder.Bind<Camera>().ToValue(main).ToName(MainElement.CAMERA)
				.CrossContext();
			Vector3 inNormal = new Vector3(0f, 1f, 0f);
			Vector3 inPoint = new Vector3(0f, 0f, 0f);
			Plane value = new Plane(inNormal, inPoint);
			Boxed<Plane> o = new Boxed<Plane>(value);
			injectionBinder.Bind<Boxed<Plane>>().ToValue(o).ToName(GameElement.GROUND_PLANE);
			injectionBinder.Bind<IDCNService>().To<DCNService>().ToSingleton();
			injectionBinder.Bind<ShowDCNScreenSignal>().ToSingleton();
			injectionBinder.Bind<DCNShowFeaturedContentSignal>().ToSingleton();
			injectionBinder.Bind<IMasterPlanService>().To<MasterPlanService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<EnableAllVillainLairCollidersSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<EnableOneVillainLairColliderSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<UpdateAllVillainLairCollidersSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<SetVillainLairAnimationTriggerSignal>().ToSingleton();
			injectionBinder.Bind<IdleMinionSignal>().ToSingleton();
			injectionBinder.Bind<AddMinionSignal>().ToSingleton();
			injectionBinder.Bind<AddNamedCharacterSignal>().ToSingleton();
			injectionBinder.Bind<CharacterArrivedAtDestinationSignal>().ToSingleton();
			injectionBinder.Bind<MinionWalkPathSignal>().ToSingleton();
			injectionBinder.Bind<MinionRunPathSignal>().ToSingleton();
			injectionBinder.Bind<MinionAppearSignal>().ToSingleton();
			injectionBinder.Bind<AnimateSelectedMinionSignal>().ToSingleton();
			injectionBinder.Bind<DebugUpdateGridSignal>().ToSingleton();
			injectionBinder.Bind<DebugKeyHitSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<DebugPickService>().ToSingleton().CrossContext();
			injectionBinder.Bind<ShowDebugVisualizerSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<StartGroupGachaSignal>().ToSingleton();
			injectionBinder.Bind<StartMinionRouteSignal>().ToSingleton();
			injectionBinder.Bind<StartTaskSignal>().ToSingleton();
			injectionBinder.Bind<StartTeleportTaskSignal>().ToSingleton();
			injectionBinder.Bind<EnableMinionRendererSignal>().ToSingleton();
			injectionBinder.Bind<RevealBuildingSignal>().ToSingleton();
			injectionBinder.Bind<StartIncidentalAnimationSignal>().ToSingleton();
			injectionBinder.Bind<MinionAcknowledgeSignal>().ToSingleton();
			injectionBinder.Bind<ShowBuildingFootprintSignal>().ToSingleton();
			injectionBinder.Bind<DisplayBuildingSignal>().ToSingleton();
			injectionBinder.Bind<BRBCelebrationAnimationSignal>().ToSingleton();
			injectionBinder.Bind<CreateDummyBuildingSignal>().ToSingleton();
			injectionBinder.Bind<PlayMinionNoAnimAudioSignal>().ToSingleton();
			injectionBinder.Bind<RouteMinionToLairResourcePlotSignal>().ToSingleton();
			injectionBinder.Bind<RouteMinionToLeisureSignal>().ToSingleton();
			injectionBinder.Bind<RemoveMinionFromLeisureSignal>().ToSingleton();
			injectionBinder.Bind<TeleportMinionToLeisureSignal>().ToSingleton();
			injectionBinder.Bind<RemoveMinionFromLairResourcePlotSignal>().ToSingleton();
			injectionBinder.Bind<SetPartyStatesSignal>().ToSingleton();
			injectionBinder.Bind<TapMinionSignal>().ToSingleton();
			injectionBinder.Bind<StopMinionCampingSignal>().ToSingleton();
			injectionBinder.Bind<StuartShowStartSignal>().ToSingleton();
			injectionBinder.Bind<CloseDownOrderBoardUISignal>().ToSingleton();
			injectionBinder.Bind<IncidentalPartyFavorAnimationCompletedSignal>().ToSingleton();
			injectionBinder.Bind<HideTSMCharacterSignal>().ToSingleton();
			injectionBinder.Bind<CaptainWaveAndCallCallbackSignal>().ToSingleton();
			injectionBinder.Bind<HideSpecialEventCharacterSignal>().ToSingleton();
			injectionBinder.Bind<ShowSpecialEventCharacterSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<TikiBarSetAnimParamSignal>().ToSingleton();
			injectionBinder.Bind<TikiBarResetAnimParamSignal>().ToSingleton();
			injectionBinder.Bind<PhilCelebrateSignal>().ToSingleton();
			injectionBinder.Bind<PhilGetAttentionSignal>().ToSingleton();
			injectionBinder.Bind<PhilBeginIntroLoopSignal>().ToSingleton();
			injectionBinder.Bind<PhilPlayIntroSignal>().ToSingleton();
			injectionBinder.Bind<PhilSitAtBarSignal>().ToSingleton();
			injectionBinder.Bind<PhilActivateSignal>().ToSingleton();
			injectionBinder.Bind<PhilEnableTikiBarControllerSignal>().ToSingleton();
			injectionBinder.Bind<PhilGoToTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<PhilSignFixedSignal>().ToSingleton();
			injectionBinder.Bind<PhilGoToStartLocationSignal>().ToSingleton();
			injectionBinder.Bind<PhilPlayConfettiSignal>().ToSingleton();
			injectionBinder.Bind<StuartAddToStageSignal>().ToSingleton();
			injectionBinder.Bind<StuartStartPerformingSignal>().ToSingleton();
			injectionBinder.Bind<StuartGetOnStageImmediateSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<StuartTicketFilledSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<StuartTunesGuitarSignal>().ToSingleton();
			injectionBinder.Bind<StopStuartPerformanceAudioSignal>().ToSingleton();
			injectionBinder.Bind<KevinGreetVillainSignal>().ToSingleton();
			injectionBinder.Bind<KevinGoToWelcomeHutSignal>().ToSingleton();
			injectionBinder.Bind<InitializeVillainSignal>().ToSingleton();
			injectionBinder.Bind<DisplayVillainSignal>().ToSingleton();
			injectionBinder.Bind<CreateVillainViewSignal>().ToSingleton();
			injectionBinder.Bind<VillainGotoCarpetSignal>().ToSingleton();
			injectionBinder.Bind<VillainGotoCabanaSignal>().ToSingleton();
			injectionBinder.Bind<VillainPlayWelcomeSignal>().ToSingleton();
			injectionBinder.Bind<VillainPlayFarewellSignal>().ToSingleton();
			injectionBinder.Bind<SignalActionSignal>().ToSingleton();
			injectionBinder.Bind<InventoryBuildingMovementSignal>().ToSingleton();
			injectionBinder.Bind<RestoreScaffoldingViewSignal>().ToSingleton();
			injectionBinder.Bind<RestoreRibbonViewSignal>().ToSingleton();
			injectionBinder.Bind<RestorePlatformViewSignal>().ToSingleton();
			injectionBinder.Bind<RestoreBuildingViewSignal>().ToSingleton();
			injectionBinder.Bind<UpdateTaskedMinionSignal>().ToSingleton();
			injectionBinder.Bind<CameraResetPanVelocitySignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoZoomSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoZoomCompleteSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoPanSignal>().ToSingleton();
			injectionBinder.Bind<CameraAutoPanCompleteSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraCinematicZoomSignal>().ToSingleton();
			injectionBinder.Bind<CameraCinematicPanSignal>().ToSingleton();
			injectionBinder.Bind<ToggleVignetteSignal>().ToSingleton();
			injectionBinder.Bind<MinionReactSignal>().ToSingleton();
			injectionBinder.Bind<Scaffolding>().ToSingleton();
			injectionBinder.Bind<UnlockCharacterModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<MignetteGameModel>().ToSingleton().CrossContext();
			injectionBinder.Bind<MinionSeekPositionSignal>().ToSingleton();
			injectionBinder.Bind<MasterPlanComponentTaskUpdatedSignal>().ToSingleton();
			injectionBinder.Bind<SetMasterPlanWayfinderIconToCompleteSignal>().ToSingleton();
			injectionBinder.Bind<SetMasterPlanRewardAnimatorSignal>().ToSingleton();
			injectionBinder.Bind<CloseConfirmationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CollectRedemptionSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<TeleportMinionsToTownForPartySignal>().ToSingleton();
			injectionBinder.Bind<EndTownhallMinionPartyAnimationSignal>().ToSingleton();
			injectionBinder.Bind<PrepareLeisureMinionsForPartySignal>().ToSingleton();
			injectionBinder.Bind<PrepareTaskingMinionsForPartySignal>().ToSingleton();
			injectionBinder.Bind<RestoreLeisureMinionsFromPartySignal>().ToSingleton();
			injectionBinder.Bind<RestoreTaskingMinionsFromPartySignal>().ToSingleton();
			injectionBinder.Bind<PostMinionPartyStartSignal>().ToSingleton();
			injectionBinder.Bind<PostMinionPartyEndSignal>().ToSingleton();
			injectionBinder.Bind<TriggerPhilPartyStartSignal>().ToSingleton();
			injectionBinder.Bind<MinionPartyUnlockedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<FinishMinionPartyUnlockSequenceSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<MinionPartyAnimationSignal>().ToSingleton();
			injectionBinder.Bind<MinionPartyFavorIncidentalAnimationSignal>().ToSingleton();
			injectionBinder.Bind<SetMinionPartyBuildingStateSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AddMinionsPartyFavorSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AddSpecificMinionPartyFavorSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PostStartPartyBuffTimerSignal>().ToSingleton();
			injectionBinder.Bind<StartCurrencyBuffSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<StopCurrencyBuffSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PartyFavorTrackChildSignal>().ToSingleton();
			injectionBinder.Bind<PartyFavorFreeAllMinionsSignal>().ToSingleton();
			injectionBinder.Bind<PurchaseNewBuildingSignal>().ToSingleton();
			injectionBinder.Bind<CancelPurchaseSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CreateInventoryBuildingSignal>().ToSingleton();
			injectionBinder.Bind<SetBuildingPositionSignal>().ToSingleton();
			injectionBinder.Bind<MoveScaffoldingSignal>().ToSingleton();
			injectionBinder.Bind<EjectAllMinionsFromBuildingSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<EjectMinionFromBuildingSignal>().ToSingleton();
			injectionBinder.Bind<StopGagAnimationSignal>().ToSingleton();
			injectionBinder.Bind<ShowHarvestReadySignal>().ToSingleton();
			injectionBinder.Bind<DisplayMIBBuildingSignal>().ToSingleton();
			injectionBinder.Bind<GrantMIBRewardsSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<IMIBService>().To<MIBService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<ITikiBarService>().To<TikiBarService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<RestoreMinionAtTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<ReleaseMinionFromTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<PathCharacterToTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<TeleportCharacterToTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<UnveilCharacterObjectSignal>().ToSingleton();
			injectionBinder.Bind<BeginCharacterLoopAnimationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PopUnleashedCharacterToTikiBarSignal>().ToSingleton();
			injectionBinder.Bind<UnleashCharacterAnimationCompleteSignal>().ToSingleton();
			injectionBinder.Bind<CharacterDrinkingCompleteSignal>().ToSingleton();
			injectionBinder.Bind<CharacterIntroCompleteSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<CharacterIntroCompleteSignal>().To<CharacterIntroCompleteCommand>();
			injectionBinder.Bind<EndCharacterIntroSignal>().ToSingleton();
			injectionBinder.Bind<ToggleStickerbookGlowSignal>().ToSingleton();
			injectionBinder.Bind<RandomFlyOverCompleteSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<OrderBoardUpdateTicketOnBoardSignal>().ToSingleton();
			injectionBinder.Bind<OrderBoardClearTicketOnBoardSignal>().ToSingleton();
			injectionBinder.Bind<OpenOrderBoardSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoMoveToInstanceSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoMoveToPositionSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraCinematicMoveToBuildingSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CameraAutoMoveToMignetteSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<SwitchCameraSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<RandomFlyOverSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<InitCharacterObjectSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<HighlightBuildingSignal>().ToSingleton().CrossContext()
				.Weak();
			injectionBinder.Bind<PostMinionUpgradeSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<BobPointsAtSignSignal>().ToSingleton();
			injectionBinder.Bind<IdleInTownHallSignal>().ToSingleton();
			injectionBinder.Bind<BobCelebrateLandExpansionSignal>().ToSingleton();
			injectionBinder.Bind<BobCelebrateLandExpansionCompleteSignal>().ToSingleton();
			injectionBinder.Bind<BobReturnToTownSignal>().ToSingleton();
			injectionBinder.Bind<AnimatePhilSignal>().ToSingleton();
			injectionBinder.Bind<AnimateKevinSignal>().ToSingleton();
			injectionBinder.Bind<SetKevinAnimatorCullingModeSignal>().ToSingleton();
			injectionBinder.Bind<CancelAllNotificationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<CancelNotificationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<PlayLocalAudioCommand>().ToSingleton();
			injectionBinder.Bind<StartLoopingAudioCommand>().ToSingleton();
			injectionBinder.Bind<StopLocalAudioCommand>().ToSingleton();
			injectionBinder.Bind<PlayMinionStateAudioCommand>().ToSingleton();
			injectionBinder.Bind<PlayLocalAudioOneShotCommand>().ToSingleton();
			injectionBinder.Bind<QueueLocalAudioCommand>().ToSingleton();
			injectionBinder.Bind<PlayGlobalSoundFXCommand>().ToSingleton();
			injectionBinder.Bind<UpdatePlayerDLCTierSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdateMarketplaceRepairStateSignal>().ToSingleton();
			injectionBinder.Bind<AppResumeCompletedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AppFocusGainedCompletedSignal>().ToSingleton();
			injectionBinder.Bind<IHelpTipTrackingService>().To<HelpTipTrackingService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<GotoSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<StartSaleSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<IRewardedAdService>().To<RewardedAdService>().ToSingleton()
				.CrossContext();
			injectionBinder.Bind<RewardedAdRewardSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<ResetRewardedAdLimitSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<AdPlacementActivityStateChangedSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<UpdateAdHUDSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<StartSignal>().To<GameStartCommand>();
			base.commandBinder.Bind<AppPauseSignal>().To<GamePauseCommand>();
			base.commandBinder.Bind<AppResumeSignal>().To<GameResumeCommand>();
			base.commandBinder.Bind<AppQuitSignal>().To<AppQuitCommand>();
			base.commandBinder.Bind<AppFocusGainedSignal>().To<AppFocusGainedCommand>();
			base.commandBinder.Bind<AllMinionLoadedSignal>().To<AllMinionLoadedCommand>();
			base.commandBinder.Bind<DisplayPlayerTrainingSignal>().To<DisplayPlayerTrainingCommand>();
			base.commandBinder.Bind<PlayerTrainingTransactionOutputExaminationSignal>().To<PlayerTrainingTransactionOutputExaminationCommand>();
			base.commandBinder.Bind<CreateForSaleSignSignal>().To<CreateForSaleSignCommand>();
			base.commandBinder.Bind<UpdateForSaleSignsSignal>().To<UpdateForSaleSignsCommand>();
			base.commandBinder.Bind<DisplayMinionSelectedIconSignal>().To<DisplayMinionSelectedIconCommand>();
			base.commandBinder.Bind<DisplayMasterPlanCooldownRewardDialogSignal>().To<DisplayMasterPlanCooldownRewardDialogCommand>();
			base.commandBinder.Bind<DisplayMasterPlanCooldownAlertSignal>().To<DisplayMasterPlanCooldownAlertCommand>();
			base.commandBinder.Bind<CleanupMasterPlanSignal>().To<CleanupMasterPlanCommand>();
			base.commandBinder.Bind<CleanupMasterPlanComponentsSignal>().To<CleanupMasterPlanComponentsCommand>();
			base.commandBinder.Bind<RevealMasterPlanComponentSignal>().To<RevealMasterPlanComponentCommand>();
			base.commandBinder.Bind<RemoveInvalidOneOffCraftableSignal>().To<RemoveInvalidOneOffCraftableCommand>();
			base.commandBinder.Bind<DisplayRedemptionConfirmationSignal>().To<DisplayRedemptionConfirmationCommand>();
			base.commandBinder.Bind<CollectRedemptionSignal>().To<CollectRedemptionCommand>();
			base.commandBinder.Bind<CreateMarketplaceSlotSignal>().To<CreateMarketplaceSlotCommand>();
			base.commandBinder.Bind<CreateLockedPremiumSlotSignal>().To<CreateLockedPremiumSlotCommand>();
			base.commandBinder.Bind<PurchaseMarketplaceSlotSignal>().To<PurchaseMarketplaceSlotCommand>();
			base.commandBinder.Bind<UpdateMarketplaceSaleOrderSignal>().To<UpdateMarketplaceSaleOrderCommand>();
			base.commandBinder.Bind<UpdateMarketplaceSlotStateSignal>().To<UpdateMarketplaceSlotStateCommand>();
			base.commandBinder.Bind<MarketplaceItemSoldSignal>().To<MarketplaceItemSoldCommand>();
			base.commandBinder.Bind<SellToAISignal>().To<SellToAICommand>();
			base.commandBinder.Bind<GenerateBuyItemsSignal>().To<GenerateBuyItemsCommand>();
			base.commandBinder.Bind<BuyMarketplaceItemSignal>().To<BuyMarketplaceItemCommand>();
			base.commandBinder.Bind<InitializeMarketplaceSlotsSignal>().To<InitializeMarketplaceSlotsCommand>();
			base.commandBinder.Bind<CollectMarketplaceSaleSignal>().To<CollectMarketplaceSaleCommand>();
			base.commandBinder.Bind<RestorePlayersSalesSignal>().To<RestorePlayersSalesCommand>();
			base.commandBinder.Bind<CancelMarketPlaceSaleSignal>().To<CancelMarketplaceSaleCommand>();
			base.commandBinder.Bind<StartMarketplaceRefreshTimerSignal>().To<StartMarketplaceRefreshTimerCommand>();
			base.commandBinder.Bind<RefreshSaleItemsSignal>().To<RefreshSaleItemsCommand>();
			base.commandBinder.Bind<InterpolateSaleTimeSignal>().To<InterpolateSaleTimeCommand>();
			base.commandBinder.Bind<ReportMarketplaceTransactionSignal>().To<ReportMarketplaceTransactionCommand>();
			base.commandBinder.Bind<StartMarketplaceOnboardingSignal>().To<StartMarketplaceOnboardingCommand>();
			base.commandBinder.Bind<DisplayNotificationReminderSignal>().To<DisplayNotificationReminderCommand>();
			base.commandBinder.Bind<StartMinionPartyIntroSignal>().To<StartMinionPartyIntroCommand>();
			base.commandBinder.Bind<StartMinionPartySignal>().To<StartMinionPartyCommand>();
			base.commandBinder.Bind<StartMinionPartyUnlockSequenceSignal>().To<StartMinionPartyUnlockSequenceCommand>();
			base.commandBinder.Bind<FinishMinionPartyUnlockSequenceSignal>().To<FinishMinionPartyUnlockSequenceCommand>();
			base.commandBinder.Bind<StartLeisurePartyPointsSignal>().To<StartLeisurePartyPointsCommand>();
			base.commandBinder.Bind<CreateDoobersFromGiftBoxSignal>().To<CreateDoobersFromGiftBoxCommand>();
			base.commandBinder.Bind<MinionPartyReadySignal>().To<MinionPartyReadyCommand>();
			base.commandBinder.Bind<EndPartyBuffTimerSignal>().To<EndPartyBuffTimerCommand>();
			base.commandBinder.Bind<EndPartyBuffTimerWithCallbackSignal>().To<EndPartyBuffTimerWithCallbackCommand>();
			base.commandBinder.Bind<EndMinionPartySignal>().To<EndMinionPartyCommand>();
			base.commandBinder.Bind<RestoreMinionPartySignal>().To<RestoreMinionPartyCommand>();
			base.commandBinder.Bind<LoadPartyAssetsSignal>().To<LoadPartyAssetsCommand>();
			base.commandBinder.Bind<PreLoadPartyAssetsSignal>().To<PreLoadPartyAssetsCommand>();
			base.commandBinder.Bind<UnloadPartyAssetsSignal>().To<UnloadPartyAssetsCommand>();
			base.commandBinder.Bind<CheckMinionPartyLevelSignal>().To<CheckMinionPartyLevelCommand>();
			base.commandBinder.Bind<ConfirmStartNewMinionPartySignal>().To<ConfirmStartNewMinionPartyCommand>();
			base.commandBinder.Bind<SetupEndMinionPartyTimerSignal>().To<SetupEndMinionPartyTimerCommand>();
			base.commandBinder.Bind<StartPartyBuffTimerSignal>().To<StartPartyBuffTimerCommand>();
			base.commandBinder.Bind<StartPartyFavorAnimationSignal>().To<StartPartyFavorAnimationCommand>();
			base.commandBinder.Bind<AddCharacterToPartyStageSignal>().To<AddCharacterToPartyStageCommand>();
			base.commandBinder.Bind<RemoveCharacterFromPartyStageSignal>().To<RemoveCharacterFromPartyStageCommand>();
			base.commandBinder.Bind<StartPartyPointBuffSignal>().To<StartPartyPointBuffCommand>();
			base.commandBinder.Bind<StartProductionBuffSignal>().To<StartProductionBuffCommand>();
			base.commandBinder.Bind<StopPartyPointBuffSignal>().To<StopPartyPointBuffCommand>();
			base.commandBinder.Bind<StopProductionBuffSignal>().To<StopProductionBuffCommand>();
			base.commandBinder.Bind<GetBuffStateSignal>().To<GetBuffStateCommand>();
			base.commandBinder.Bind<MIBBuildingSelectedSignal>().To<MIBBuildingSelectedCommand>();
			base.commandBinder.Bind<MIBBuildingResourceIconSelectedSignal>().To<MIBBuildingResourceIconSelectedCommand>();
			base.commandBinder.Bind<SetupBuildingManagerSignal>().To<SetupBuildingManagerCommand>();
			base.commandBinder.Bind<PlaceBuildingSignal>().To<PlaceBuildingCommand>();
			base.commandBinder.Bind<AddFootprintSignal>().To<AddFootprintCommand>();
			base.commandBinder.Bind<RemoveBuildingSignal>().To<RemoveBuildingCommand>();
			base.commandBinder.Bind<BuildingCooldownCompleteSignal>().To<BuildingCooldownCompleteCommand>();
			base.commandBinder.Bind<BuildingChangeStateSignal>().To<BuildingChangeStateCommand>();
			base.commandBinder.Bind<ConstructionCompleteSignal>().To<ConstructionCompleteCommand>();
			base.commandBinder.Bind<StartConstructionSignal>().To<StartConstructionCommand>();
			base.commandBinder.Bind<ScheduleCooldownSignal>().To<ScheduleCooldownCommand>();
			base.commandBinder.Bind<DisplayInaccessibleMessageSignal>().To<DisplayInaccessibleMessageCommand>();
			base.commandBinder.Bind<RestoreBuildingSignal>().To<RestoreBuildingCommand>();
			base.commandBinder.Bind<RepairLairResourcePlotSignal>().To<RepairLairResourcePlotCommand>();
			base.commandBinder.Bind<ParentLairResourcePlotSignal>().To<ParentLairResourcePlotCommand>();
			base.commandBinder.Bind<TryHarvestBuildingSignal>().To<TryHarvestBuildingCommand>();
			base.commandBinder.Bind<QuestStepRushSignal>().To<QuestStepRushCommand>();
			base.commandBinder.Bind<DeliverTaskItemSignal>().To<DeliverTaskItemCommand>();
			base.commandBinder.Bind<StartTimedQuestSignal>().To<StartTimedQuestCommand>();
			base.commandBinder.Bind<QuestTimeoutSignal>().To<QuestTimeoutCommand>();
			base.commandBinder.Bind<CleanupDebrisSignal>().To<CleanupDebrisCommand>();
			base.commandBinder.Bind<RepairBridgeSignal>().To<RepairBridgeCommand>();
			base.commandBinder.Bind<PanAndOpenModalSignal>().To<PanAndOpenModalCommand>();
			base.commandBinder.Bind<PanAndOpenQuestSignal>().To<PanAndOpenQuestCommand>();
			base.commandBinder.Bind<TSMCharacterSelectedSignal>().To<TSMCharacterSelectedCommand>();
			base.commandBinder.Bind<CancelTSMQuestTaskSignal>().To<CancelTSMQuestTaskCommand>();
			base.commandBinder.Bind<UpdateTSMQuestTaskSignal>().To<UpdateTSMQuestTaskCommand>();
			base.commandBinder.Bind<CreateTSMQuestTaskSignal>().To<CreateTSMQuestTaskCommand>();
			base.commandBinder.Bind<StartQuestTaskSignal>().To<StartTSMQuestTaskCommand>();
			base.commandBinder.Bind<CollectTSMQuestTaskRewardSignal>().To<CollectTSMQuestTaskRewardCommand>();
			base.commandBinder.Bind<DisplayConfirmationSignal>().To<DisplayConfirmationCommand>();
			base.commandBinder.Bind<QueueConfirmationSignal>().To<QueueConfirmationCommand>();
			base.commandBinder.Bind<QueueDCNConfirmationSignal>().To<QueueDCNConfirmationCommand>();
			base.commandBinder.Bind<DisplayStickerbookSignal>().To<DisplayStickerbookCommand>();
			base.commandBinder.Bind<ShowDialogSignal>().To<ShowDialogCommand>();
			base.commandBinder.Bind<UpdatePrestigeListSignal>().To<UpdatePrestigeListCommand>();
			base.commandBinder.Bind<InitBuildingObjectSignal>().To<InitBuildingObjectCommand>();
			base.commandBinder.Bind<ToggleMinionRendererSignal>().To<ToggleMinionRendererCommand>();
			base.commandBinder.Bind<RelocateTaskedMinionsSignal>().To<RelocateTaskedMinionsCommand>();
			base.commandBinder.Bind<MinionTaskCompleteSignal>().To<MinionTaskCompleteCommand>();
			base.commandBinder.Bind<UpdateConnectablesSignal>().To<UpdateConnectablesCommand>();
			base.commandBinder.Bind<ConnectableBuildingPickedUpSignal>().To<ConnectableBuildingPickedUpCommand>();
			injectionBinder.Bind<TSMTreasureCollectedSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<GetNewQuestSignal>().To<GetNewQuestCommand>();
			base.commandBinder.Bind<QuestCompleteSignal>().To<QuestCompleteCommand>();
			base.commandBinder.Bind<QuestScriptCompleteSignal>().To<QuestScriptCompleteCommand>();
			base.commandBinder.Bind<GoToNextQuestStateSignal>().To<GoToNextQuestStateCommand>();
			base.commandBinder.Bind<QuestTaskStateChangeSignal>().To<QuestTaskStateChangeCommand>();
			base.commandBinder.Bind<QuestHarvestableSignal>().To<QuestHarvestableCommand>();
			base.commandBinder.Bind<StartGameTimeTrackingSignal>().To<StartGameTimeTrackingCommand>();
			base.commandBinder.Bind<UpdateNamedCharacterPrestigeSignal>().To<UpdateNamedCharacterPrestigeCommand>();
			base.commandBinder.Bind<UpdateVillainPrestigeSignal>().To<UpdateVillainPrestigeCommand>();
			base.commandBinder.Bind<EnableVillainIslandCollidersSignal>().To<EnableVillainIslandCollidersCommand>();
			base.commandBinder.Bind<QueueCabanaSignal>().To<QueueCabanaCommand>();
			base.commandBinder.Bind<MoveInCabanaSignal>().To<MoveInCabanaCommand>();
			base.commandBinder.Bind<CheckResourceBuildingSlotsSignal>().To<CheckResourceBuildingSlotsCommand>();
			base.commandBinder.Bind<SetupTSMCharacterSignal>().To<SetupTSMCharacterCommand>();
			base.commandBinder.Bind<MinionPrestigeCompleteSignal>().To<MinionPrestigeCompleteCommand>();
			base.commandBinder.Bind<AddMinionToTikiBarSignal>().To<AddMinionToTikiBarCommand>();
			base.commandBinder.Bind<RemoveMinionFromTikiBarSignal>().To<RemoveMinionFromTikiBarCommand>();
			base.commandBinder.Bind<UnveilCharacterSignal>().To<UnveilCharacterCommand>();
			base.commandBinder.Bind<BeginCharacterIntroLoopSignal>().To<BeginCharacterIntroLoopCommand>();
			base.commandBinder.Bind<UnleashCharacterAtShoreSignal>().To<UnleashCharacterAtShoreCommand>();
			base.commandBinder.Bind<SetupSpecialEventCharacterSignal>().To<SetupSpecialEventCharacterCommand>();
			base.commandBinder.Bind<NamedCharacterSelectedSignal>().To<NamedCharacterSelectedCommand>();
			base.commandBinder.Bind<ReconcileSalesSignal>().To<ReconcileSalesCommand>();
			base.commandBinder.Bind<LoadServerSalesSignal>().To<LoadServerSalesCommand>();
			base.commandBinder.Bind<StartSaleSignal>().To<StartSaleCommand>();
			base.commandBinder.Bind<EndSaleSignal>().To<EndSaleCommand>();
			base.commandBinder.Bind<UpdatePurchasedSalesSignal>().To<UpdatePurchasedSalesCommand>();
			base.commandBinder.Bind<ProcessSpecialSaleItemSignal>().To<ProcessSpecialSaleItemCommand>();
			base.commandBinder.Bind<LoadEnvironmentSignal>().To<LoadEnvironmentCommand>();
			base.commandBinder.Bind<PopulateEnvironmentSignal>().To<PopulateEnvironmentCommand>();
			base.commandBinder.Bind<PopulateBuildingSignal>().To<PopulateBuildingCommand>();
			base.commandBinder.Bind<SetupBrokenBridgesSignal>().To<SetupBrokenBridgesCommand>();
			base.commandBinder.Bind<SetupLandExpansionsSignal>().To<SetupLandExpansionsCommand>();
			base.commandBinder.Bind<SetupForSaleSignsSignal>().To<SetupForSaleSignsCommand>();
			base.commandBinder.Bind<SetupFlowersSignal>().To<SetupFlowersCommand>();
			base.commandBinder.Bind<SetupDebrisSignal>().To<SetupDebrisCommand>();
			base.commandBinder.Bind<SetupAspirationalBuildingsSignal>().To<SetupAspirationalBuildingsCommand>();
			base.commandBinder.Bind<MapAnimationEventSignal>().To<MapAnimationEventCommand>();
			base.commandBinder.Bind<RelocateCharacterSignal>().To<RelocateCharacterCommand>();
			base.commandBinder.Bind<CreateInnerTubeSignal>().To<CreateInnerTubeCommand>();
			base.commandBinder.Bind<MignetteCallMinionsSignal>().To<MignetteCallMinionsCommand>();
			injectionBinder.Bind<List<Point>>().ToValue(new List<Point>(10)).ToName(GameElement.RELOCATION_POINTS);
			StartLoopingAudioCommand startLoopingAudioCommand = injectionBinder.GetInstance<StartLoopingAudioCommand>();
			StartLoopingAudioSignal instance = injectionBinder.GetInstance<StartLoopingAudioSignal>();
			instance.AddListener(delegate(CustomFMOD_StudioEventEmitter emitter, string name, Dictionary<string, float> evtParams)
			{
				startLoopingAudioCommand.Execute(emitter, name, evtParams);
			});
			PlayLocalAudioCommand playLocalAudioCommand = injectionBinder.GetInstance<PlayLocalAudioCommand>();
			PlayLocalAudioSignal instance2 = injectionBinder.GetInstance<PlayLocalAudioSignal>();
			instance2.AddListener(delegate(CustomFMOD_StudioEventEmitter emitter, string name, Dictionary<string, float> evtParams)
			{
				playLocalAudioCommand.Execute(emitter, name, evtParams);
			});
			StopLocalAudioCommand stopLocalAudioCommand = injectionBinder.GetInstance<StopLocalAudioCommand>();
			StopLocalAudioSignal instance3 = injectionBinder.GetInstance<StopLocalAudioSignal>();
			instance3.AddListener(delegate(CustomFMOD_StudioEventEmitter emitter)
			{
				stopLocalAudioCommand.Execute(emitter);
			});
			PlayMinionStateAudioCommand playMinionStateAudioCommand = injectionBinder.GetInstance<PlayMinionStateAudioCommand>();
			PlayMinionStateAudioSignal instance4 = injectionBinder.GetInstance<PlayMinionStateAudioSignal>();
			instance4.AddListener(delegate(MinionStateAudioArgs args)
			{
				playMinionStateAudioCommand.Execute(args);
			});
			PlayLocalAudioOneShotCommand playLocalAudioOneShotCommand = injectionBinder.GetInstance<PlayLocalAudioOneShotCommand>();
			PlayLocalAudioOneShotSignal instance5 = injectionBinder.GetInstance<PlayLocalAudioOneShotSignal>();
			instance5.AddListener(delegate(CustomFMOD_StudioEventEmitter emitter, string audioClip)
			{
				playLocalAudioOneShotCommand.Execute(emitter, audioClip);
			});
			QueueLocalAudioCommandSignal instance6 = injectionBinder.GetInstance<QueueLocalAudioCommandSignal>();
			QueueLocalAudioCommand queueLocalAudioCommand = injectionBinder.GetInstance<QueueLocalAudioCommand>();
			instance6.AddListener(delegate(CustomFMOD_StudioEventEmitter emitter, string audioClip)
			{
				queueLocalAudioCommand.Execute(emitter, audioClip);
			});
			PlayGlobalSoundFXSignal instance7 = injectionBinder.GetInstance<PlayGlobalSoundFXSignal>();
			PlayGlobalSoundFXCommand playGlobalSoundFXCommand = null;
			instance7.AddListener(delegate(string audioClip)
			{
				if (playGlobalSoundFXCommand == null)
				{
					playGlobalSoundFXCommand = injectionBinder.GetInstance<PlayGlobalSoundFXCommand>();
				}
				playGlobalSoundFXCommand.Execute(audioClip);
			});
			base.commandBinder.Bind<PlayGlobalMusicSignal>().To<PlayGlobalMusicCommand>();
			base.commandBinder.Bind<PlayMignetteMusicSignal>().To<PlayMignetteMusicCommand>();
			base.commandBinder.Bind<FadeBackgroundAudioSignal>().To<FadeBackgroundAudioCommand>();
			base.commandBinder.Bind<SetupObjectManagersSignal>().To<SetupObjectManagersCommand>();
			base.commandBinder.Bind<LoadMinionDataSignal>().To<LoadMinionDataCommand>();
			base.commandBinder.Bind<CreateMinionSignal>().To<CreateMinionCommand>();
			base.commandBinder.Bind<InitCharacterObjectSignal>().To<InitCharacterObjectCommand>();
			base.commandBinder.Bind<MinionMoveToSignal>().To<MoveMinionCommand>();
			base.commandBinder.Bind<MoveMinionFinishedSignal>().To<MoveMinionFinishedCommand>();
			base.commandBinder.Bind<MinionRunToSignal>().To<RunMinionCommand>();
			base.commandBinder.Bind<MinionReactInRadiusSignal>().To<MinionReactInRadiusCommand>();
			base.commandBinder.Bind<UnlockMinionsSignal>().To<UnlockMinionsCommand>();
			base.commandBinder.Bind<SendMinionToLeisureSignal>().To<SendMinionToLeisureCommand>();
			base.commandBinder.Bind<SendMinionToLairResourcePlotSignal>().To<SendMinionToLairResourcePlotCommand>();
			base.commandBinder.Bind<GenerateTemporaryMinionSignal>().To<GenerateTemporaryMinionCommand>();
			base.commandBinder.Bind<SetNamedCharacterCollidersSignal>().To<SetNamedCharacterCollidersCommand>();
			base.commandBinder.Bind<SetupNamedCharactersSignal>().To<SetupNamedCharactersCommand>();
			base.commandBinder.Bind<CreateNamedCharacterViewSignal>().To<CreateNamedCharacterViewCommand>();
			base.commandBinder.Bind<RestoreNamedCharacterSignal>().To<RestoreNamedCharacterCommand>();
			base.commandBinder.Bind<RestoreStuartSignal>().To<RestoreStuartCommand>();
			base.commandBinder.Bind<NamedCharacterRemovedFromTikiBarSignal>().To<NamedCharacterRemovedFromTikiBarCommand>();
			base.commandBinder.Bind<StartCOPPAFlowSignal>().To<StartCOPPAFlowCommand>();
			base.commandBinder.Bind<MinionStateChangeSignal>().To<MinionStateChangeCommand>();
			base.commandBinder.Bind<SelectionCompleteSignal>().To<SelectionCompleteCommand>();
			base.commandBinder.Bind<RerouteMinionPathsSignal>().To<RerouteMinionPathsCommand>();
			base.commandBinder.Bind<RestoreMinionStateSignal>().To<RestoreMinionStateCommand>();
			base.commandBinder.Bind<StartMinionTaskSignal>().To<StartMinionTaskCommand>();
			base.commandBinder.Bind<AwardLevelSignal>().To<AwardLevelCommand>();
			injectionBinder.Bind<LevelUpSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<LevelUpSignal>().To<LevelUpCommand>();
			base.commandBinder.Bind<ReconcileLevelUnlocksSignal>().To<ReconcileLevelUnlocksCommand>();
			base.commandBinder.Bind<PointBobLandExpansionSignal>().To<PointBobLandExpansionCommand>();
			base.commandBinder.Bind<FrolicSignal>().To<FrolicCommand>();
			base.commandBinder.Bind<AddStuartToStageSignal>().To<AddStuartToStageCommand>();
			base.commandBinder.Bind<DisplayVolcanoLairVillainWayfinderSignal>().To<DisplayVolcanoLairVillainWayfinderCommand>();
			base.commandBinder.Bind<StartMignetteSignal>().To<StartMignetteCommand>();
			base.commandBinder.Bind<StopMignetteSignal>().To<StopMignetteCommand>();
			base.commandBinder.Bind<ShowAndIncreaseMignetteScoreSignal>().To<ShowAndIncreaseMignetteScoreCommand>();
			base.commandBinder.Bind<DCNTokenSignal>().To<DCNTokenCommand>();
			base.commandBinder.Bind<DCNFeaturedSignal>().To<DCNFeaturedCommand>();
			base.commandBinder.Bind<DCNEventSignal>().To<DCNEventCommand>();
			base.commandBinder.Bind<DCNMaybeShowContentSignal>().To<DCNMaybeShowContentCommand>();
			base.commandBinder.Bind<UpdatePlayerDLCTierSignal>().To<UpdatePlayerDLCTierCommand>();
			base.commandBinder.Bind<ScheduleNotificationSignal>().To<ScheduleNotificationCommand>();
			base.commandBinder.Bind<CancelNotificationSignal>().To<CancelNotificationCommand>();
			base.commandBinder.Bind<CancelAllNotificationSignal>().To<CancelAllNotificationCommand>();
			base.commandBinder.Bind<ReengageNotificationSignal>().To<ReengageNotificationCommand>();
			base.commandBinder.Bind<TimedQuestNotificationSignal>().To<TimedQuestNotificationCommand>();
			base.commandBinder.Bind<ScheduleJobsCompleteNotificationsSignal>().To<ScheduleJobCompleteNotificationsCommand>();
			base.commandBinder.Bind<CheckSystemNotificationSettingsSignal>().To<CheckSystemNotificationSettingsCommand>();
			base.commandBinder.Bind<MignetteNotificationSignal>().To<MignetteNotificationCommand>();
			base.commandBinder.Bind<SocialEventNotificationsSignal>().To<SocialEventNotificationsCommand>();
			base.commandBinder.Bind<SetupAudioSignal>().To<SetupAudioCommand>();
			base.commandBinder.Bind<UpdateVolumeSignal>().To<UpdateVolumeCommand>();
			base.commandBinder.Bind<MuteVolumeSignal>().To<MuteVolumeCommand>();
			injectionBinder.Bind<MuteMusicBusSignal>().ToSingleton().CrossContext()
				.Weak();
			base.commandBinder.Bind<MuteMusicBusSignal>().To<MuteMusicBusCommand>();
			base.commandBinder.Bind<SavePlayerSignal>().To<SavePlayerCommand>();
			base.commandBinder.Bind<SetupTimeEventServiceSignal>().To<SetupTimeEventServiceCommand>();
			base.commandBinder.Bind<HarvestReadySignal>().To<HarvestReadyCommand>();
			base.commandBinder.Bind<UpdateQuestWorldIconsSignal>().To<UpdateQuestWorldIconsCommand>();
			base.commandBinder.Bind<RemoveQuestWorldIconSignal>().To<RemoveQuestWorldIconCommand>();
			base.commandBinder.Bind<InsufficientInputsSignal>().To<InsufficientInputsCommand>();
			base.commandBinder.Bind<PostTransactionSignal>().To<PostTransactionCommand>();
			base.commandBinder.Bind<BuildingReactionSignal>().To<BuildingReactionCommand>();
			base.commandBinder.Bind<IncidentalAnimationSignal>().To<IncidentalAnimationCommand>();
			base.commandBinder.Bind<RemoveGagFromPlayerSignal>().To<RemoveGagFromPlayerCommand>();
			base.commandBinder.Bind<BRBCelebrationAnimationSignal>().To<BRBCelebrationAnimationCommand>();
			base.commandBinder.Bind<EnableBuildingAnimatorsSignal>().To<EnableBuildingAnimatorsCommand>();
			base.commandBinder.Bind<EnableAllMinionRenderersSignal>().To<EnableAllMinionRenderersCommand>();
			base.commandBinder.Bind<PartySignal>().To<PartyCommand>();
			base.commandBinder.Bind<ShuffleCompositeBuildingPiecesSignal>().To<ShuffleCompositeBuildingPiecesCommand>();
			base.commandBinder.Bind<MinionUpgradeSignal>().To<MinionUpgradeCommand>();
			base.commandBinder.Bind<ChangeMinionCostumeSignal>().To<ChangeMinionCostumeCommand>();
			base.commandBinder.Bind<CheckPopulationBenefitSignal>().To<CheckPopulationBenefitCommand>();
			base.commandBinder.Bind<CreateMasterPlanComponentSignal>().To<CreateMasterPlanComponentCommand>();
			base.commandBinder.Bind<MasterPlanSelectComponentSignal>().To<MasterPlanSelectComponentCommand>();
			base.commandBinder.Bind<MasterPlanRushTaskSignal>().To<MasterPlanRushTaskCommand>();
			base.commandBinder.Bind<MasterPlanTaskCompleteSignal>().To<MasterPlanTaskCompleteCommand>();
			base.commandBinder.Bind<MasterPlanComponentCompleteSignal>().To<MasterPlanComponentCompleteCommand>();
			base.commandBinder.Bind<AwardLairBonusDropsThenSetHarvestReadySignal>().To<AwardLairBonusDropsThenSetHarvestReadyCommand>();
			base.commandBinder.Bind<StartMasterPlanCooldownSignal>().To<StartMasterPlanCooldownCommand>();
			base.commandBinder.Bind<MasterPlanCooldownCompleteSignal>().To<MasterPlanCooldownCompleteCommand>();
			base.commandBinder.Bind<RestoreMasterPlanSignal>().To<RestoreMasterPlanCommand>();
			base.commandBinder.Bind<DetermineLairUISignal>().To<DetermineLairUICommand>();
			injectionBinder.Bind<CreateMasterPlanSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<CreateMasterPlanSignal>().To<CreateMasterPlanCommand>();
			injectionBinder.Bind<MasterPlanCompleteSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<MasterPlanCompleteSignal>().To<MasterPlanCompleteCommand>();
			injectionBinder.Bind<DisplayMasterPlanIntroDialogSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<DisplayMasterPlanIntroDialogSignal>().To<DisplayMasterPlanIntroDialogCommand>();
			injectionBinder.Bind<GenerateNewMasterPlanSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<GenerateNewMasterPlanSignal>().To<GenerateNewMasterPlanCommand>();
			base.commandBinder.Bind<DisplayMasterPlanRewardDialogSignal>().To<DisplayMasterPlanRewardDialogCommand>();
			base.commandBinder.Bind<DisplayTreasureTeaserSignal>().To<DisplayTreasureTeaserCommand>();
			base.commandBinder.Bind<ConfirmBuildingMovementSignal>().To<ConfirmBuildingMovementCommand>();
			base.commandBinder.Bind<CancelBuildingMovementSignal>().To<CancelBuildingMovementCommand>();
			base.commandBinder.Bind<InventoryBuildingMovementSignal>().To<InventoryBuildingMovementCommand>();
			base.commandBinder.Bind<CreateBuildingInInventorySignal>().To<CreateBuildingInInventoryCommand>();
			base.commandBinder.Bind<SelectMinionSignal>().To<SelectMinionCommand>();
			base.commandBinder.Bind<DeselectMinionSignal>().To<DeselectMinionCommand>();
			base.commandBinder.Bind<DeselectAllMinionsSignal>().To<DeselectAllMinionsCommand>();
			base.commandBinder.Bind<DeselectTaskedMinionsSignal>().To<DeselectTaskedMinionsCommand>();
			base.commandBinder.Bind<RandomizeMinionPositionsSignal>().To<RandomizeMinionPositionsCommand>();
			base.commandBinder.Bind<DeselectPickSignal>().To<DeselectPickController>();
			base.commandBinder.Bind<MinionPickSignal>().To<MinionPickController>();
			base.commandBinder.Bind<BuildingPickSignal>().To<BuildingPickController>();
			base.commandBinder.Bind<DragAndDropPickSignal>().To<DragAndDropPickController>();
			base.commandBinder.Bind<MagnetFingerPickSignal>().To<MagnetFingerPickController>();
			base.commandBinder.Bind<DoubleClickPickSignal>().To<DoubleClickPickController>();
			base.commandBinder.Bind<LandExpansionPickSignal>().To<LandExpansionPickController>();
			injectionBinder.Bind<VillainIslandMessageSignal>().ToSingleton().CrossContext()
				.Weak();
			base.commandBinder.Bind<VillainIslandMessageSignal>().To<VillainIslandMessageController>();
			base.commandBinder.Bind<TikiBarViewPickSignal>().To<TikiBarViewPickController>();
			base.commandBinder.Bind<CallMinionSignal>().To<CallMinionCommand>();
			base.commandBinder.Bind<RushTaskSignal>().To<RushMinionTaskCommand>();
			base.commandBinder.Bind<RushOneMinionInBuildingSignal>().To<RushOneMinionInBuildingCommand>();
			injectionBinder.Bind<BuyMinionRushSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<BuyMinionRushSignal>().To<BuyMinionRushCommand>();
			base.commandBinder.Bind<LiberateLeveledUpMinionsSignal>().To<LiberateLeveledUpMinionsCommand>();
			base.commandBinder.Bind<CameraAutoMoveSignal>().To<CameraAutoMoveCommand>();
			base.commandBinder.Bind<CameraAutoMoveToBuildingSignal>().To<CameraAutoMoveToBuildingCommand>();
			base.commandBinder.Bind<CameraAutoMoveToBuildingDefSignal>().To<CameraAutoMoveToBuildingDefCommand>();
			base.commandBinder.Bind<CameraAutoMoveToMignetteSignal>().To<CameraAutoMoveToMignetteCommand>();
			base.commandBinder.Bind<CameraAutoMoveToInstanceSignal>().To<CameraAutoMoveToInstanceCommand>();
			base.commandBinder.Bind<CameraAutoMoveToPositionSignal>().To<CameraAutoMoveToPositionCommand>();
			base.commandBinder.Bind<CameraCinematicMoveToBuildingSignal>().To<CameraCinematicMoveToBuildingCommand>();
			base.commandBinder.Bind<CameraInstanceFocusSignal>().To<CameraInstanceFocusCommand>();
			base.commandBinder.Bind<CameraMoveToCustomPositionSignal>().To<CameraMoveToCustomPositionCommand>();
			base.commandBinder.Bind<CameraMoveToCustomLairPlotSignal>().To<CameraMoveToCustomLairPlotCommand>();
			base.commandBinder.Bind<RandomFlyOverSignal>().To<RandomFlyOverCommand>();
			injectionBinder.Bind<ShowHiddenBuildingsSignal>().ToSingleton().CrossContext()
				.Weak();
			base.commandBinder.Bind<ShowHiddenBuildingsSignal>().To<ShowHiddenBuildingCommand>();
			base.commandBinder.Bind<OpenOrderBoardSignal>().To<OpenOrderBoardCommand>();
			base.commandBinder.Bind<OrderBoardFillOrderSignal>().To<OrderBoardFillOrderCommand>();
			base.commandBinder.Bind<OrderBoardDeleteOrderSignal>().To<OrderBoardDeleteOrderCommand>();
			base.commandBinder.Bind<OrderBoardSetNewTicketSignal>().To<OrderBoardSetNewTicketCommand>();
			base.commandBinder.Bind<RestoreLeisureBuildingSignal>().To<RestoreLeisureBuildingCommand>();
			base.commandBinder.Bind<RestoreCraftingBuildingsSignal>().To<RestoreCraftingBuildingsCommand>();
			base.commandBinder.Bind<RestoreTaskableBuildingSignal>().To<RestoreTaskableBuildingCommand>();
			base.commandBinder.Bind<TeleportMinionToBuildingSignal>().To<TeleportMinionToBuildingCommand>();
			base.commandBinder.Bind<RestoreResourcePlotBuildingSignal>().To<RestoreResourcePlotBuildingCommand>();
			base.commandBinder.Bind<CameraZoomBeachSignal>().To<CameraZoomBeachCommand>();
			injectionBinder.Bind<StuartShowCompleteSignal>().ToSingleton().CrossContext()
				.Weak();
			base.commandBinder.Bind<StuartShowCompleteSignal>().To<StuartShowCompleteCommand>();
			base.commandBinder.Bind<GenerateTemporaryMinionsStageSignal>().To<GenerateTemporaryMinionsStageCommand>();
			base.commandBinder.Bind<StuartSpinMicSignal>().To<StuartSpinMicCommand>();
			base.commandBinder.Bind<SwitchCameraSignal>().To<SwitchCameraCommand>();
			base.commandBinder.Bind<BuildingZoomSignal>().To<BuildingZoomCommand>();
			base.commandBinder.Bind<SelectLandExpansionSignal>().To<SelectLandExpansionCommand>();
			base.commandBinder.Bind<PurchaseLandExpansionSignal>().To<PurchaseLandExpansionCommand>();
			base.commandBinder.Bind<HighlightLandExpansionSignal>().To<HighlightLandExpansionCommand>();
			base.commandBinder.Bind<OpenBuildingMenuSignal>().To<OpenBuildingMenuCommand>();
			base.commandBinder.Bind<ShowCraftingBuildingMenuSignal>().To<ShowCraftingBuildingMenuCommand>();
			base.commandBinder.Bind<LoadRushDialogSignal>().To<LoadRushDialogCommand>();
			base.commandBinder.Bind<LoadCurrencyWarningSignal>().To<LoadCurrencyWarningDialogCommand>();
			base.commandBinder.Bind<OpenStorageBuildingSignal>().To<OpenStorageBuildingCommand>();
			base.commandBinder.Bind<OpenStageBuildingSignal>().To<OpenStageBuildingCommand>();
			base.commandBinder.Bind<OpenVillainLairPortalBuildingSignal>().To<OpenVillainLairPortalBuildingCommand>();
			base.commandBinder.Bind<OpenVillainLairResourcePlotBuildingSignal>().To<OpenVillainLairResourcePlotBuildingCommand>();
			base.commandBinder.Bind<ClickedVillainLairComponentBuildingSignal>().To<ClickedVillainLairComponentBuildingCommand>();
			base.commandBinder.Bind<UnlockVillainLairSignal>().To<UnlockVillainLairCommand>();
			base.commandBinder.Bind<LoadVillainLairAssetsSignal>().To<LoadVillainLairAssetsCommand>();
			base.commandBinder.Bind<LoadVillainLairInstancesSignal>().To<LoadVillainLairInstancesCommand>();
			base.commandBinder.Bind<EnterVillainLairSignal>().To<EnterVillainLairCommand>();
			base.commandBinder.Bind<ExitVillainLairSignal>().To<ExitVillainLairCommand>();
			base.commandBinder.Bind<OpenMinionUpgradeBuildingSignal>().To<OpenMinionUpgradeBuildingCommand>();
			base.commandBinder.Bind<SaveDevicePrefsSignal>().To<SaveDevicePrefsCommand>();
			base.commandBinder.Bind<LoadAnimatorStateInfoSignal>().To<LoadAnimatorStateInfoCommand>();
			base.commandBinder.Bind<UnloadAnimatorStateInfoSignal>().To<UnloadAnimatorStateInfoCommand>();
			base.commandBinder.Bind<CloneUserSignal>().To<CloneUserCommand>();
			base.commandBinder.Bind<CloneUserFromEnvSignal>().To<CloneUserFromEnvCommand>();
			base.commandBinder.Bind<OpenHelpSignal>().To<OpenHelpCommand>();
			base.commandBinder.Bind<CreditCollectionRewardSignal>().To<CreditCollectionRewardCommand>();
			base.commandBinder.Bind<GotoSignal>().To<GotoCommand>();
			base.commandBinder.Bind<InitializeSpecialEventSignal>().To<InitializeSpecialEventCommand>();
			base.commandBinder.Bind<StartSpecialEventSignal>().To<StartSpecialEventCommand>();
			base.commandBinder.Bind<RestoreSpecialEventSignal>().To<RestoreSpecialEventCommand>();
			base.commandBinder.Bind<EndSpecialEventSignal>().To<EndSpecialEventCommand>();
			base.commandBinder.Bind<LoadSpecialEventPaintoverSignal>().To<LoadSpecialEventPaintoverCommand>();
			injectionBinder.Bind<SocialOrderBoardCompleteSignal>().ToSingleton().CrossContext();
			base.commandBinder.Bind<SocialOrderBoardCompleteSignal>().To<SocialOrderBoardCompleteCommand>();
			base.mediationBinder.Bind<TSMCharacterView>().To<TSMCharacterMediator>();
			base.mediationBinder.Bind<MinionManagerView>().To<MinionManagerMediator>();
			base.mediationBinder.Bind<NamedCharacterManagerView>().To<NamedCharacterManagerMediator>();
			base.mediationBinder.Bind<VillainManagerView>().To<VillainManagerMediator>();
			base.mediationBinder.Bind<BuildingManagerView>().To<BuildingManagerMediator>();
			base.mediationBinder.Bind<OrderBoardBuildingObjectView>().To<OrderBoardBuildingObjectMediator>();
			base.mediationBinder.Bind<TikiBarBuildingObjectView>().To<TikiBarBuildingObjectMediator>();
			base.mediationBinder.Bind<LeisureBuildingObjectView>().To<LeisureBuildingObjectMediator>();
			base.mediationBinder.Bind<VillainLairResourcePlotObjectView>().To<VillainLairResourcePlotObjectMediator>();
			base.mediationBinder.Bind<EnvironmentalMignetteView>().To<EnvironmentalMignetteMediator>();
			base.mediationBinder.Bind<VillainLairLocationView>().To<VillainLairLocationMediator>();
			base.mediationBinder.Bind<MignetteBuildingCooldownView>().To<MignetteBuildingCooldownMediator>();
			base.mediationBinder.Bind<EnvironmentAudioManagerView>().To<EnvironmentAudioManagerMediator>();
			base.mediationBinder.Bind<EnvironmentAudioEmitterView>().To<EnvironmentAudioEmitterMediator>();
			base.mediationBinder.Bind<FootprintView>().To<FootprintMediator>();
			base.mediationBinder.Bind<PositionalAudioListenerView>().To<PositionalAudioListenerMediator>();
			base.mediationBinder.Bind<CompositeBuildingView>().To<CompositeBuildingMediator>();
			base.mediationBinder.Bind<StorageBuildingView>().To<StorageBuildingMediator>();
			base.mediationBinder.Bind<PartyFavorAnimationView>().To<PartyFavorAnimationMediator>();
			base.mediationBinder.Bind<DCNBuildingObjectView>().To<DCNBuildingObjectMediator>();
			base.mediationBinder.Bind<MIBBuildingObjectView>().To<MIBBuildingObjectMediator>();
			base.mediationBinder.Bind<VolcanoEntranceView>().To<VolcanoEntranceMediator>();
			base.mediationBinder.Bind<MasterPlanComponentBuildingObject>().To<MasterPlanComponentBuildingObjectMediator>();
			base.mediationBinder.Bind<BobView>().To<BobMediator>();
			base.mediationBinder.Bind<KevinView>().To<KevinMediator>();
			base.mediationBinder.Bind<PhilView>().To<PhilMediator>();
			base.mediationBinder.Bind<StuartView>().To<StuartMediator>();
			base.mediationBinder.Bind<VillainView>().To<VillainMediator>();
			base.mediationBinder.Bind<SpecialEventCharacterView>().To<SpecialEventCharacterMediator>();
			base.mediationBinder.Bind<VignetteView>().To<VignetteMediator>();
			base.mediationBinder.Bind<ParticleSystemAudioHandlerView>().To<ParticleSystemAudioHandlerMediator>();
			TriggerSignalBinding();
			base.mediationBinder.Bind<TouchPanView>().To<TouchPanMediator>();
			base.mediationBinder.Bind<TouchZoomView>().To<TouchZoomMediator>();
			base.mediationBinder.Bind<TouchDragPanView>().To<TouchDragPanMediator>();
		}

		private void TriggerSignalBinding()
		{
			injectionBinder.Bind<TriggerFiredSignal>().ToSingleton();
			injectionBinder.Bind<CloseTSMModalSignal>().ToSingleton();
			injectionBinder.Bind<TSMReachedDestinationSignal>().ToSingleton().CrossContext();
			injectionBinder.Bind<TSMStartIntroAnimation>().ToSingleton().CrossContext();
			base.commandBinder.Bind<ValidateCurrentTriggerSignal>().To<ValidateCurrentTriggerCommand>();
			base.commandBinder.Bind<RewardTriggerSignal>().To<RewardTriggerCommand>();
			base.commandBinder.Bind<CheckTriggersSignal>().To<CheckTriggersCommand>();
			base.commandBinder.Bind<CreateTSMCharacterWithTriggerSignal>().To<CreateTSMCharacterWithTriggerCommand>();
		}

		protected override void PostBindings()
		{
			injectionBinder.Bind<PathFinder>().CrossContext().ToSingleton();
			injectionBinder.GetInstance<IInput>();
		}
	}
}
